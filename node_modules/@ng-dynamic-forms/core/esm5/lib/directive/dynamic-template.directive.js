/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, TemplateRef } from "@angular/core";
/** @enum {string} */
var DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {
    Start: "START", End: "END",
};
export { DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT };
var DynamicTemplateDirective = /** @class */ (function () {
    function DynamicTemplateDirective(templateRef) {
        this.templateRef = templateRef;
        this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;
        this.as = null;
    }
    DynamicTemplateDirective.decorators = [
        { type: Directive, args: [{
                    selector: "ng-template[modelId],ng-template[modelType]"
                },] }
    ];
    /** @nocollapse */
    DynamicTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    DynamicTemplateDirective.propDecorators = {
        align: [{ type: Input }],
        as: [{ type: Input }],
        index: [{ type: Input }],
        modelId: [{ type: Input }],
        modelType: [{ type: Input }]
    };
    return DynamicTemplateDirective;
}());
export { DynamicTemplateDirective };
if (false) {
    /** @type {?} */
    DynamicTemplateDirective.prototype.align;
    /** @type {?} */
    DynamicTemplateDirective.prototype.as;
    /** @type {?} */
    DynamicTemplateDirective.prototype.index;
    /** @type {?} */
    DynamicTemplateDirective.prototype.modelId;
    /** @type {?} */
    DynamicTemplateDirective.prototype.modelType;
    /** @type {?} */
    DynamicTemplateDirective.prototype.templateRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZW1wbGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZS9keW5hbWljLXRlbXBsYXRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7SUFFWCxPQUFRLE9BQU8sRUFBRSxLQUFNLEtBQUs7OztBQUUvRTtJQVdJLGtDQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7UUFOdkMsVUFBSyxHQUFXLG9DQUFvQyxDQUFDLEdBQUcsQ0FBQztRQUN6RCxPQUFFLEdBQWtCLElBQUksQ0FBQztJQUtpQixDQUFDOztnQkFYdkQsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSw2Q0FBNkM7aUJBQzFEOzs7O2dCQU4wQixXQUFXOzs7d0JBU2pDLEtBQUs7cUJBQ0wsS0FBSzt3QkFDTCxLQUFLOzBCQUNMLEtBQUs7NEJBQ0wsS0FBSzs7SUFHViwrQkFBQztDQUFBLEFBWkQsSUFZQztTQVRZLHdCQUF3Qjs7O0lBRWpDLHlDQUFrRTs7SUFDbEUsc0NBQWtDOztJQUNsQyx5Q0FBbUM7O0lBQ25DLDJDQUF5Qjs7SUFDekIsNkNBQTJCOztJQUVmLCtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuZXhwb3J0IGVudW0gRFlOQU1JQ19URU1QTEFURV9ESVJFQ1RJVkVfQUxJR05NRU5UIHsgU3RhcnQgPSBcIlNUQVJUXCIsIEVuZCA9IFwiRU5EXCJ9XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiBcIm5nLXRlbXBsYXRlW21vZGVsSWRdLG5nLXRlbXBsYXRlW21vZGVsVHlwZV1cIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmUge1xuXG4gICAgQElucHV0KCkgYWxpZ246IHN0cmluZyA9IERZTkFNSUNfVEVNUExBVEVfRElSRUNUSVZFX0FMSUdOTUVOVC5FbmQ7XG4gICAgQElucHV0KCkgYXM6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuICAgIEBJbnB1dCgpIGluZGV4OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgQElucHV0KCkgbW9kZWxJZDogc3RyaW5nO1xuICAgIEBJbnB1dCgpIG1vZGVsVHlwZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuIl19