/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicInputControlModel } from "../dynamic-input-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isNumber } from "../../utils/core.utils";
/** @type {?} */
export const DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = "TEXTAREA";
/** @type {?} */
export const DYNAMIC_FORM_TEXTAREA_WRAP_HARD = "hard";
/** @type {?} */
export const DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = "soft";
/**
 * @record
 */
export function DynamicTextAreaModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.cols;
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.rows;
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.wrap;
}
export class DynamicTextAreaModel extends DynamicInputControlModel {
    /**
     * @param {?} config
     * @param {?=} layout
     */
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;
        this.cols = isNumber(config.cols) ? config.cols : 20;
        this.rows = isNumber(config.rows) ? config.rows : 2;
        this.wrap = config.wrap || DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;
    }
}
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicTextAreaModel.prototype, "cols", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicTextAreaModel.prototype, "rows", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicTextAreaModel.prototype, "wrap", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicTextAreaModel.prototype, "type", void 0);
if (false) {
    /** @type {?} */
    DynamicTextAreaModel.prototype.cols;
    /** @type {?} */
    DynamicTextAreaModel.prototype.rows;
    /** @type {?} */
    DynamicTextAreaModel.prototype.wrap;
    /** @type {?} */
    DynamicTextAreaModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZXh0YXJlYS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvdGV4dGFyZWEvZHluYW1pYy10ZXh0YXJlYS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBa0MsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUxRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUVsRCxNQUFNLE9BQU8sa0NBQWtDLEdBQUcsVUFBVTs7QUFFNUQsTUFBTSxPQUFPLCtCQUErQixHQUFHLE1BQU07O0FBQ3JELE1BQU0sT0FBTywrQkFBK0IsR0FBRyxNQUFNOzs7O0FBRXJELGdEQUtDOzs7SUFIRywwQ0FBYzs7SUFDZCwwQ0FBYzs7SUFDZCwwQ0FBYzs7QUFHbEIsTUFBTSxPQUFPLG9CQUFxQixTQUFRLHdCQUFnQzs7Ozs7SUFRdEUsWUFBWSxNQUFrQyxFQUFFLE1BQWlDO1FBRTdFLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFKRCxTQUFJLEdBQVcsa0NBQWtDLENBQUM7UUFNdkUsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxJQUFJLCtCQUErQixDQUFDO0lBQy9ELENBQUM7Q0FDSjtBQWRtQjtJQUFmLFlBQVksRUFBRTs7a0RBQWM7QUFDYjtJQUFmLFlBQVksRUFBRTs7a0RBQWM7QUFDYjtJQUFmLFlBQVksRUFBRTs7a0RBQWM7QUFFYjtJQUFmLFlBQVksRUFBRTs7a0RBQTREOzs7SUFKM0Usb0NBQTZCOztJQUM3QixvQ0FBNkI7O0lBQzdCLG9DQUE2Qjs7SUFFN0Isb0NBQTJFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY0lucHV0Q29udHJvbE1vZGVsLCBEeW5hbWljSW5wdXRDb250cm9sTW9kZWxDb25maWcgfSBmcm9tIFwiLi4vZHluYW1pYy1pbnB1dC1jb250cm9sLm1vZGVsXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQgfSBmcm9tIFwiLi4vbWlzYy9keW5hbWljLWZvcm0tY29udHJvbC1sYXlvdXQubW9kZWxcIjtcbmltcG9ydCB7IHNlcmlhbGl6YWJsZSB9IGZyb20gXCIuLi8uLi9kZWNvcmF0b3Ivc2VyaWFsaXphYmxlLmRlY29yYXRvclwiO1xuaW1wb3J0IHsgaXNOdW1iZXIgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY29yZS51dGlsc1wiO1xuXG5leHBvcnQgY29uc3QgRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9URVhUQVJFQSA9IFwiVEVYVEFSRUFcIjtcblxuZXhwb3J0IGNvbnN0IERZTkFNSUNfRk9STV9URVhUQVJFQV9XUkFQX0hBUkQgPSBcImhhcmRcIjtcbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fVEVYVEFSRUFfV1JBUF9TT0ZUID0gXCJzb2Z0XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY1RleHRBcmVhTW9kZWxDb25maWcgZXh0ZW5kcyBEeW5hbWljSW5wdXRDb250cm9sTW9kZWxDb25maWc8c3RyaW5nPiB7XG5cbiAgICBjb2xzPzogbnVtYmVyO1xuICAgIHJvd3M/OiBudW1iZXI7XG4gICAgd3JhcD86IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIER5bmFtaWNUZXh0QXJlYU1vZGVsIGV4dGVuZHMgRHluYW1pY0lucHV0Q29udHJvbE1vZGVsPHN0cmluZz4ge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIGNvbHM6IG51bWJlcjtcbiAgICBAc2VyaWFsaXphYmxlKCkgcm93czogbnVtYmVyO1xuICAgIEBzZXJpYWxpemFibGUoKSB3cmFwOiBzdHJpbmc7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgcmVhZG9ubHkgdHlwZTogc3RyaW5nID0gRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9URVhUQVJFQTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY1RleHRBcmVhTW9kZWxDb25maWcsIGxheW91dD86IER5bmFtaWNGb3JtQ29udHJvbExheW91dCkge1xuXG4gICAgICAgIHN1cGVyKGNvbmZpZywgbGF5b3V0KTtcblxuICAgICAgICB0aGlzLmNvbHMgPSBpc051bWJlcihjb25maWcuY29scykgPyBjb25maWcuY29scyA6IDIwO1xuICAgICAgICB0aGlzLnJvd3MgPSBpc051bWJlcihjb25maWcucm93cykgPyBjb25maWcucm93cyA6IDI7XG4gICAgICAgIHRoaXMud3JhcCA9IGNvbmZpZy53cmFwIHx8IERZTkFNSUNfRk9STV9URVhUQVJFQV9XUkFQX1NPRlQ7XG4gICAgfVxufSJdfQ==