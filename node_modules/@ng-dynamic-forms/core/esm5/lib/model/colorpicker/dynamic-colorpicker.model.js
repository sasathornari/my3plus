/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicFormValueControlModel } from "../dynamic-form-value-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean, isString } from "../../utils/core.utils";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = "COLORPICKER";
/**
 * @record
 */
export function DynamicColorPickerModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicColorPickerModelConfig.prototype.format;
    /** @type {?|undefined} */
    DynamicColorPickerModelConfig.prototype.inline;
}
var DynamicColorPickerModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicColorPickerModel, _super);
    function DynamicColorPickerModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;
        _this.format = isString(config.format) ? config.format : null;
        _this.inline = isBoolean(config.inline) ? config.inline : false;
        return _this;
    }
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicColorPickerModel.prototype, "format", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Boolean)
    ], DynamicColorPickerModel.prototype, "inline", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicColorPickerModel.prototype, "type", void 0);
    return DynamicColorPickerModel;
}(DynamicFormValueControlModel));
export { DynamicColorPickerModel };
if (false) {
    /** @type {?} */
    DynamicColorPickerModel.prototype.format;
    /** @type {?} */
    DynamicColorPickerModel.prototype.inline;
    /** @type {?} */
    DynamicColorPickerModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1jb2xvcnBpY2tlci5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvY29sb3JwaWNrZXIvZHluYW1pYy1jb2xvcnBpY2tlci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBc0MsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV2SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFFN0QsTUFBTSxLQUFPLHFDQUFxQyxHQUFHLGFBQWE7Ozs7QUFFbEUsbURBSUM7OztJQUZHLCtDQUFnQjs7SUFDaEIsK0NBQWlCOztBQUdyQjtJQUE2QyxtREFBNkM7SUFPdEYsaUNBQVksTUFBcUMsRUFBRSxNQUFpQztRQUFwRixZQUVJLGtCQUFNLE1BQU0sRUFBRSxNQUFNLENBQUMsU0FJeEI7UUFSd0IsVUFBSSxHQUFXLHFDQUFxQyxDQUFDO1FBTTFFLEtBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzdELEtBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDOztJQUNuRSxDQUFDO0lBWGU7UUFBZixZQUFZLEVBQUU7OzJEQUF1QjtJQUN0QjtRQUFmLFlBQVksRUFBRTs7MkRBQWlCO0lBRWhCO1FBQWYsWUFBWSxFQUFFOzt5REFBK0Q7SUFTbEYsOEJBQUM7Q0FBQSxBQWRELENBQTZDLDRCQUE0QixHQWN4RTtTQWRZLHVCQUF1Qjs7O0lBRWhDLHlDQUFzQzs7SUFDdEMseUNBQWdDOztJQUVoQyx1Q0FBOEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsQ29uZmlnLCBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsIH0gZnJvbSBcIi4uL2R5bmFtaWMtZm9ybS12YWx1ZS1jb250cm9sLm1vZGVsXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQgfSBmcm9tIFwiLi4vbWlzYy9keW5hbWljLWZvcm0tY29udHJvbC1sYXlvdXQubW9kZWxcIjtcbmltcG9ydCB7IHNlcmlhbGl6YWJsZSB9IGZyb20gXCIuLi8uLi9kZWNvcmF0b3Ivc2VyaWFsaXphYmxlLmRlY29yYXRvclwiO1xuaW1wb3J0IHsgaXNCb29sZWFuLCBpc1N0cmluZyB9IGZyb20gXCIuLi8uLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0NPTE9SUElDS0VSID0gXCJDT0xPUlBJQ0tFUlwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNDb2xvclBpY2tlck1vZGVsQ29uZmlnIGV4dGVuZHMgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbENvbmZpZzxzdHJpbmcgfCBvYmplY3Q+IHtcblxuICAgIGZvcm1hdD86IHN0cmluZztcbiAgICBpbmxpbmU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY0NvbG9yUGlja2VyTW9kZWwgZXh0ZW5kcyBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsPHN0cmluZyB8IG9iamVjdD4ge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIGZvcm1hdDogc3RyaW5nIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgaW5saW5lOiBib29sZWFuO1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIHJlYWRvbmx5IHR5cGU6IHN0cmluZyA9IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfQ09MT1JQSUNLRVI7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IER5bmFtaWNDb2xvclBpY2tlck1vZGVsQ29uZmlnLCBsYXlvdXQ/OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQpIHtcblxuICAgICAgICBzdXBlcihjb25maWcsIGxheW91dCk7XG5cbiAgICAgICAgdGhpcy5mb3JtYXQgPSBpc1N0cmluZyhjb25maWcuZm9ybWF0KSA/IGNvbmZpZy5mb3JtYXQgOiBudWxsO1xuICAgICAgICB0aGlzLmlubGluZSA9IGlzQm9vbGVhbihjb25maWcuaW5saW5lKSA/IGNvbmZpZy5pbmxpbmUgOiBmYWxzZTtcbiAgICB9XG59Il19