/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicFormValueControlModel } from "../dynamic-form-value-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isNumber } from "../../utils/core.utils";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_RATING = "RATING";
/**
 * @record
 */
export function DynamicRatingModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicRatingModelConfig.prototype.max;
}
var DynamicRatingModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicRatingModel, _super);
    function DynamicRatingModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_RATING;
        _this.max = isNumber(config.max) ? config.max : 10;
        return _this;
    }
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Number)
    ], DynamicRatingModel.prototype, "max", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicRatingModel.prototype, "type", void 0);
    return DynamicRatingModel;
}(DynamicFormValueControlModel));
export { DynamicRatingModel };
if (false) {
    /** @type {?} */
    DynamicRatingModel.prototype.max;
    /** @type {?} */
    DynamicRatingModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1yYXRpbmcubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL21vZGVsL3JhdGluZy9keW5hbWljLXJhdGluZy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBc0MsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV2SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUVsRCxNQUFNLEtBQU8sZ0NBQWdDLEdBQUcsUUFBUTs7OztBQUV4RCw4Q0FHQzs7O0lBREcsdUNBQWE7O0FBR2pCO0lBQXdDLDhDQUFvQztJQU14RSw0QkFBWSxNQUFnQyxFQUFFLE1BQWlDO1FBQS9FLFlBRUksa0JBQU0sTUFBTSxFQUFFLE1BQU0sQ0FBQyxTQUd4QjtRQVB3QixVQUFJLEdBQVcsZ0NBQWdDLENBQUM7UUFNckUsS0FBSSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7O0lBQ3RELENBQUM7SUFUZTtRQUFmLFlBQVksRUFBRTs7bURBQW9CO0lBRW5CO1FBQWYsWUFBWSxFQUFFOztvREFBMEQ7SUFRN0UseUJBQUM7Q0FBQSxBQVpELENBQXdDLDRCQUE0QixHQVluRTtTQVpZLGtCQUFrQjs7O0lBRTNCLGlDQUFtQzs7SUFFbkMsa0NBQXlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbENvbmZpZywgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbCB9IGZyb20gXCIuLi9keW5hbWljLWZvcm0tdmFsdWUtY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4uL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcbmltcG9ydCB7IGlzTnVtYmVyIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NvcmUudXRpbHNcIjtcblxuZXhwb3J0IGNvbnN0IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfUkFUSU5HID0gXCJSQVRJTkdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljUmF0aW5nTW9kZWxDb25maWcgZXh0ZW5kcyBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsQ29uZmlnPG51bWJlcj4ge1xuXG4gICAgbWF4PzogbnVtYmVyO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY1JhdGluZ01vZGVsIGV4dGVuZHMgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbDxudW1iZXI+IHtcblxuICAgIEBzZXJpYWxpemFibGUoKSBtYXg6IG51bWJlciB8IG51bGw7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgcmVhZG9ubHkgdHlwZTogc3RyaW5nID0gRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9SQVRJTkc7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IER5bmFtaWNSYXRpbmdNb2RlbENvbmZpZywgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMubWF4ID0gaXNOdW1iZXIoY29uZmlnLm1heCkgPyBjb25maWcubWF4IDogMTA7XG4gICAgfVxufSJdfQ==