/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicInputControlModel } from "../dynamic-input-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isNumber } from "../../utils/core.utils";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = "TEXTAREA";
/** @type {?} */
export var DYNAMIC_FORM_TEXTAREA_WRAP_HARD = "hard";
/** @type {?} */
export var DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = "soft";
/**
 * @record
 */
export function DynamicTextAreaModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.cols;
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.rows;
    /** @type {?|undefined} */
    DynamicTextAreaModelConfig.prototype.wrap;
}
var DynamicTextAreaModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicTextAreaModel, _super);
    function DynamicTextAreaModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;
        _this.cols = isNumber(config.cols) ? config.cols : 20;
        _this.rows = isNumber(config.rows) ? config.rows : 2;
        _this.wrap = config.wrap || DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;
        return _this;
    }
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Number)
    ], DynamicTextAreaModel.prototype, "cols", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Number)
    ], DynamicTextAreaModel.prototype, "rows", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicTextAreaModel.prototype, "wrap", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicTextAreaModel.prototype, "type", void 0);
    return DynamicTextAreaModel;
}(DynamicInputControlModel));
export { DynamicTextAreaModel };
if (false) {
    /** @type {?} */
    DynamicTextAreaModel.prototype.cols;
    /** @type {?} */
    DynamicTextAreaModel.prototype.rows;
    /** @type {?} */
    DynamicTextAreaModel.prototype.wrap;
    /** @type {?} */
    DynamicTextAreaModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZXh0YXJlYS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvdGV4dGFyZWEvZHluYW1pYy10ZXh0YXJlYS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBa0MsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUxRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUVsRCxNQUFNLEtBQU8sa0NBQWtDLEdBQUcsVUFBVTs7QUFFNUQsTUFBTSxLQUFPLCtCQUErQixHQUFHLE1BQU07O0FBQ3JELE1BQU0sS0FBTywrQkFBK0IsR0FBRyxNQUFNOzs7O0FBRXJELGdEQUtDOzs7SUFIRywwQ0FBYzs7SUFDZCwwQ0FBYzs7SUFDZCwwQ0FBYzs7QUFHbEI7SUFBMEMsZ0RBQWdDO0lBUXRFLDhCQUFZLE1BQWtDLEVBQUUsTUFBaUM7UUFBakYsWUFFSSxrQkFBTSxNQUFNLEVBQUUsTUFBTSxDQUFDLFNBS3hCO1FBVHdCLFVBQUksR0FBVyxrQ0FBa0MsQ0FBQztRQU12RSxLQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNyRCxLQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwRCxLQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLElBQUksK0JBQStCLENBQUM7O0lBQy9ELENBQUM7SUFiZTtRQUFmLFlBQVksRUFBRTs7c0RBQWM7SUFDYjtRQUFmLFlBQVksRUFBRTs7c0RBQWM7SUFDYjtRQUFmLFlBQVksRUFBRTs7c0RBQWM7SUFFYjtRQUFmLFlBQVksRUFBRTs7c0RBQTREO0lBVS9FLDJCQUFDO0NBQUEsQUFoQkQsQ0FBMEMsd0JBQXdCLEdBZ0JqRTtTQWhCWSxvQkFBb0I7OztJQUU3QixvQ0FBNkI7O0lBQzdCLG9DQUE2Qjs7SUFDN0Isb0NBQTZCOztJQUU3QixvQ0FBMkUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbWljSW5wdXRDb250cm9sTW9kZWwsIER5bmFtaWNJbnB1dENvbnRyb2xNb2RlbENvbmZpZyB9IGZyb20gXCIuLi9keW5hbWljLWlucHV0LWNvbnRyb2wubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbExheW91dCB9IGZyb20gXCIuLi9taXNjL2R5bmFtaWMtZm9ybS1jb250cm9sLWxheW91dC5tb2RlbFwiO1xuaW1wb3J0IHsgc2VyaWFsaXphYmxlIH0gZnJvbSBcIi4uLy4uL2RlY29yYXRvci9zZXJpYWxpemFibGUuZGVjb3JhdG9yXCI7XG5pbXBvcnQgeyBpc051bWJlciB9IGZyb20gXCIuLi8uLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX1RFWFRBUkVBID0gXCJURVhUQVJFQVwiO1xuXG5leHBvcnQgY29uc3QgRFlOQU1JQ19GT1JNX1RFWFRBUkVBX1dSQVBfSEFSRCA9IFwiaGFyZFwiO1xuZXhwb3J0IGNvbnN0IERZTkFNSUNfRk9STV9URVhUQVJFQV9XUkFQX1NPRlQgPSBcInNvZnRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljVGV4dEFyZWFNb2RlbENvbmZpZyBleHRlbmRzIER5bmFtaWNJbnB1dENvbnRyb2xNb2RlbENvbmZpZzxzdHJpbmc+IHtcblxuICAgIGNvbHM/OiBudW1iZXI7XG4gICAgcm93cz86IG51bWJlcjtcbiAgICB3cmFwPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY1RleHRBcmVhTW9kZWwgZXh0ZW5kcyBEeW5hbWljSW5wdXRDb250cm9sTW9kZWw8c3RyaW5nPiB7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgY29sczogbnVtYmVyO1xuICAgIEBzZXJpYWxpemFibGUoKSByb3dzOiBudW1iZXI7XG4gICAgQHNlcmlhbGl6YWJsZSgpIHdyYXA6IHN0cmluZztcblxuICAgIEBzZXJpYWxpemFibGUoKSByZWFkb25seSB0eXBlOiBzdHJpbmcgPSBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX1RFWFRBUkVBO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBEeW5hbWljVGV4dEFyZWFNb2RlbENvbmZpZywgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMuY29scyA9IGlzTnVtYmVyKGNvbmZpZy5jb2xzKSA/IGNvbmZpZy5jb2xzIDogMjA7XG4gICAgICAgIHRoaXMucm93cyA9IGlzTnVtYmVyKGNvbmZpZy5yb3dzKSA/IGNvbmZpZy5yb3dzIDogMjtcbiAgICAgICAgdGhpcy53cmFwID0gY29uZmlnLndyYXAgfHwgRFlOQU1JQ19GT1JNX1RFWFRBUkVBX1dSQVBfU09GVDtcbiAgICB9XG59Il19