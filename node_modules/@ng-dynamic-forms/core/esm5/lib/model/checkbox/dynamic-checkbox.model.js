/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicCheckControlModel } from "../dynamic-check-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean } from "../../utils/core.utils";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = "CHECKBOX";
/**
 * @record
 */
export function DynamicCheckboxModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicCheckboxModelConfig.prototype.indeterminate;
}
var DynamicCheckboxModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicCheckboxModel, _super);
    function DynamicCheckboxModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;
        _this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;
        return _this;
    }
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Boolean)
    ], DynamicCheckboxModel.prototype, "indeterminate", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicCheckboxModel.prototype, "type", void 0);
    return DynamicCheckboxModel;
}(DynamicCheckControlModel));
export { DynamicCheckboxModel };
if (false) {
    /** @type {?} */
    DynamicCheckboxModel.prototype.indeterminate;
    /** @type {?} */
    DynamicCheckboxModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1jaGVja2JveC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvY2hlY2tib3gvZHluYW1pYy1jaGVja2JveC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBa0MsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUxRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUVuRCxNQUFNLEtBQU8sa0NBQWtDLEdBQUcsVUFBVTs7OztBQUU1RCxnREFHQzs7O0lBREcsbURBQXdCOztBQUc1QjtJQUEwQyxnREFBd0I7SUFNOUQsOEJBQVksTUFBa0MsRUFBRSxNQUFpQztRQUFqRixZQUVJLGtCQUFNLE1BQU0sRUFBRSxNQUFNLENBQUMsU0FHeEI7UUFQd0IsVUFBSSxHQUFXLGtDQUFrQyxDQUFDO1FBTXZFLEtBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDOztJQUN4RixDQUFDO0lBVGU7UUFBZixZQUFZLEVBQUU7OytEQUF3QjtJQUV2QjtRQUFmLFlBQVksRUFBRTs7c0RBQTREO0lBUS9FLDJCQUFDO0NBQUEsQUFaRCxDQUEwQyx3QkFBd0IsR0FZakU7U0FaWSxvQkFBb0I7OztJQUU3Qiw2Q0FBdUM7O0lBRXZDLG9DQUEyRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNDaGVja0NvbnRyb2xNb2RlbCwgRHluYW1pY0NoZWNrQ29udHJvbE1vZGVsQ29uZmlnIH0gZnJvbSBcIi4uL2R5bmFtaWMtY2hlY2stY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4uL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcbmltcG9ydCB7IGlzQm9vbGVhbiB9IGZyb20gXCIuLi8uLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0NIRUNLQk9YID0gXCJDSEVDS0JPWFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNDaGVja2JveE1vZGVsQ29uZmlnIGV4dGVuZHMgRHluYW1pY0NoZWNrQ29udHJvbE1vZGVsQ29uZmlnIHtcblxuICAgIGluZGV0ZXJtaW5hdGU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY0NoZWNrYm94TW9kZWwgZXh0ZW5kcyBEeW5hbWljQ2hlY2tDb250cm9sTW9kZWwge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIGluZGV0ZXJtaW5hdGU6IGJvb2xlYW47XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgcmVhZG9ubHkgdHlwZTogc3RyaW5nID0gRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9DSEVDS0JPWDtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY0NoZWNrYm94TW9kZWxDb25maWcsIGxheW91dD86IER5bmFtaWNGb3JtQ29udHJvbExheW91dCkge1xuXG4gICAgICAgIHN1cGVyKGNvbmZpZywgbGF5b3V0KTtcblxuICAgICAgICB0aGlzLmluZGV0ZXJtaW5hdGUgPSBpc0Jvb2xlYW4oY29uZmlnLmluZGV0ZXJtaW5hdGUpID8gY29uZmlnLmluZGV0ZXJtaW5hdGUgOiBmYWxzZTtcbiAgICB9XG59Il19