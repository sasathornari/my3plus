/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DynamicFormControlComponent } from "./dynamic-form-control.component";
import { isString } from "../utils/core.utils";
/**
 * @abstract
 */
export class DynamicTemplateableFormControlComponent extends DynamicFormControlComponent {
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.layoutService
            .filterTemplatesByModel(this.model, this.templates)
            .forEach((/**
         * @param {?} template
         * @return {?}
         */
        template => this.bindTemplate(template)));
    }
    /**
     * @param {?} template
     * @return {?}
     */
    bindTemplate(template) {
        if (isString(template.as) && this.templateDirectives.has(template.as)) {
            /** @type {?} */
            let property = (/** @type {?} */ (this.templateDirectives.get(template.as)));
            this.viewChild[property] = this.mapTemplate(template);
        }
    }
}
if (false) {
    /** @type {?} */
    DynamicTemplateableFormControlComponent.prototype.templateDirectives;
    /** @type {?} */
    DynamicTemplateableFormControlComponent.prototype.templates;
    /**
     * @abstract
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.viewChild = function () { };
    /**
     * @abstract
     * @param {?} template
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.mapTemplate = function (template) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZW1wbGF0ZWFibGUtZm9ybS1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L2R5bmFtaWMtdGVtcGxhdGVhYmxlLWZvcm0tY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQUUvQyxNQUFNLE9BQWdCLHVDQUF3QyxTQUFRLDJCQUEyQjs7OztJQU03RixlQUFlO1FBRVgsSUFBSSxDQUFDLGFBQWE7YUFDYixzQkFBc0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7YUFDbEQsT0FBTzs7OztRQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBQyxDQUFDO0lBQzFELENBQUM7Ozs7O0lBTUQsWUFBWSxDQUFDLFFBQWtDO1FBRTNDLElBQUksUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBRTs7Z0JBRS9ELFFBQVEsR0FBRyxtQkFBQSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBVTtZQUVqRSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekQ7SUFDTCxDQUFDO0NBQ0o7OztJQXhCRyxxRUFBaUQ7O0lBRWpELDREQUF3Rjs7Ozs7SUFTeEYsOEVBQThCOzs7Ozs7SUFFOUIsd0ZBQXNHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBEeW5hbWljVGVtcGxhdGVhYmxlRm9ybUNvbnRyb2wgfSBmcm9tIFwiLi9keW5hbWljLXRlbXBsYXRlYWJsZS1mb3JtLWNvbnRyb2wuaW50ZXJmYWNlXCI7XG5pbXBvcnQgeyBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tIFwiLi4vZGlyZWN0aXZlL2R5bmFtaWMtdGVtcGxhdGUuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQgfSBmcm9tIFwiLi9keW5hbWljLWZvcm0tY29udHJvbC5jb21wb25lbnRcIjtcbmltcG9ydCB7IGlzU3RyaW5nIH0gZnJvbSBcIi4uL3V0aWxzL2NvcmUudXRpbHNcIjtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIER5bmFtaWNUZW1wbGF0ZWFibGVGb3JtQ29udHJvbENvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIER5bmFtaWNUZW1wbGF0ZWFibGVGb3JtQ29udHJvbCwgQWZ0ZXJWaWV3SW5pdCB7XG5cbiAgICByZWFkb25seSB0ZW1wbGF0ZURpcmVjdGl2ZXM6IE1hcDxzdHJpbmcsIHN0cmluZz47XG5cbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmU+IHwgRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlW10gfCB1bmRlZmluZWQ7XG5cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG5cbiAgICAgICAgdGhpcy5sYXlvdXRTZXJ2aWNlXG4gICAgICAgICAgICAuZmlsdGVyVGVtcGxhdGVzQnlNb2RlbCh0aGlzLm1vZGVsLCB0aGlzLnRlbXBsYXRlcylcbiAgICAgICAgICAgIC5mb3JFYWNoKHRlbXBsYXRlID0+IHRoaXMuYmluZFRlbXBsYXRlKHRlbXBsYXRlKSk7XG4gICAgfVxuXG4gICAgYWJzdHJhY3QgZ2V0IHZpZXdDaGlsZCgpOiBhbnk7XG5cbiAgICBhYnN0cmFjdCBtYXBUZW1wbGF0ZSh0ZW1wbGF0ZTogRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlKTogRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlIHwgVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIGJpbmRUZW1wbGF0ZSh0ZW1wbGF0ZTogRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlKSB7XG5cbiAgICAgICAgaWYgKGlzU3RyaW5nKHRlbXBsYXRlLmFzKSAmJiB0aGlzLnRlbXBsYXRlRGlyZWN0aXZlcy5oYXModGVtcGxhdGUuYXMpKSB7XG5cbiAgICAgICAgICAgIGxldCBwcm9wZXJ0eSA9IHRoaXMudGVtcGxhdGVEaXJlY3RpdmVzLmdldCh0ZW1wbGF0ZS5hcykgYXMgc3RyaW5nO1xuXG4gICAgICAgICAgICB0aGlzLnZpZXdDaGlsZFtwcm9wZXJ0eV0gPSB0aGlzLm1hcFRlbXBsYXRlKHRlbXBsYXRlKTtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0=