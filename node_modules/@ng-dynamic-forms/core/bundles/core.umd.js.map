{"version":3,"file":"core.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@ng-dynamic-forms/core/lib/utils/core.utils.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-form-control.component.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-form-array.component.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-form-control.event.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-form-component.ts","ng://@ng-dynamic-forms/core/lib/decorator/serializable.decorator.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-form-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-form-value-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/form-array/dynamic-form-array.model.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-check-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/checkbox/dynamic-checkbox.model.ts","ng://@ng-dynamic-forms/core/lib/utils/autofill.utils.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-input-control.model.ts","ng://@ng-dynamic-forms/core/lib/utils/json.utils.ts","ng://@ng-dynamic-forms/core/lib/model/input/dynamic-input.model.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-form-control-container.component.ts","ng://@ng-dynamic-forms/core/lib/component/dynamic-templateable-form-control.component.ts","ng://@ng-dynamic-forms/core/lib/directive/dynamic-id.directive.ts","ng://@ng-dynamic-forms/core/lib/directive/dynamic-list.directive.ts","ng://@ng-dynamic-forms/core/lib/directive/dynamic-template.directive.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-date-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-file-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/dynamic-option-control.model.ts","ng://@ng-dynamic-forms/core/lib/model/form-group/dynamic-form-group.model.ts","ng://@ng-dynamic-forms/core/lib/model/checkbox/dynamic-checkbox-group.model.ts","ng://@ng-dynamic-forms/core/lib/model/colorpicker/dynamic-colorpicker.model.ts","ng://@ng-dynamic-forms/core/lib/model/datepicker/dynamic-datepicker.model.ts","ng://@ng-dynamic-forms/core/lib/model/editor/dynamic-editor.model.ts","ng://@ng-dynamic-forms/core/lib/model/file-upload/dynamic-file-upload.model.ts","ng://@ng-dynamic-forms/core/lib/model/radio/dynamic-radio-group.model.ts","ng://@ng-dynamic-forms/core/lib/model/rating/dynamic-rating.model.ts","ng://@ng-dynamic-forms/core/lib/model/select/dynamic-select.model.ts","ng://@ng-dynamic-forms/core/lib/model/slider/dynamic-slider.model.ts","ng://@ng-dynamic-forms/core/lib/model/switch/dynamic-switch.model.ts","ng://@ng-dynamic-forms/core/lib/model/textarea/dynamic-textarea.model.ts","ng://@ng-dynamic-forms/core/lib/model/timepicker/dynamic-timepicker.model.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form.validators.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form-validation.service.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form.service.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form-component.service.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form-layout.service.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form-relation.matchers.ts","ng://@ng-dynamic-forms/core/lib/service/dynamic-form-relation.service.ts","ng://@ng-dynamic-forms/core/lib/core.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isBoolean(value: any): value is boolean {\n    return typeof value === \"boolean\";\n}\n\nexport function isFunction(value: any): value is Function {\n    return typeof value === \"function\";\n}\n\nexport function isNumber(value: any): value is number {\n    return typeof value === \"number\";\n}\n\nexport function isObject(value: any): value is object {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\";\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControl } from \"./dynamic-form-control.interface\";\nimport { DynamicFormControlCustomEvent } from \"./dynamic-form-control.event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicCheckboxModel } from \"../model/checkbox/dynamic-checkbox.model\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\nimport {\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormControlTemplates\n} from \"../service/dynamic-form-layout.service\";\nimport { isString } from \"../utils/core.utils\";\n\nexport abstract class DynamicFormControlComponent implements DynamicFormControl {\n\n    private _hasFocus: boolean = false;\n\n    group: FormGroup;\n    layout: DynamicFormLayout;\n    model: DynamicFormControlModel;\n    templates: DynamicFormControlTemplates;\n\n    blur: EventEmitter<any>;\n    change: EventEmitter<any>;\n    customEvent: EventEmitter<DynamicFormControlCustomEvent> | undefined;\n    focus: EventEmitter<any>;\n\n    protected constructor(protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService) {}\n\n    get control(): AbstractControl | never {\n\n        const control = this.group.get(this.model.id);\n\n        if (control === null) {\n            throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);\n        }\n\n        return control as AbstractControl;\n    }\n\n    get elementId(): string {\n        return this.layoutService.getElementId(this.model);\n    }\n\n    get errorMessages(): string[] {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n\n    get hasFocus(): boolean {\n        return this._hasFocus;\n    }\n\n    get isInvalid(): boolean {\n        return this.control.invalid;\n    }\n\n    get isValid(): boolean {\n        return this.control.valid;\n    }\n\n    get showErrorMessages(): boolean {\n        return this.model.hasErrorMessages && this.control.touched && !this.hasFocus && this.isInvalid;\n    }\n\n    getClass(context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace, model: DynamicFormControlModel = this.model): string {\n\n        let controlLayout = this.layoutService.findByModel(model, this.layout) || model.layout as DynamicFormControlLayout;\n\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n\n    onBlur($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this._hasFocus = false;\n        this.blur.emit($event);\n    }\n\n    onChange($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this.change.emit($event);\n    }\n\n    onEmbeddedCheckboxChange($event: Event, model: DynamicCheckboxModel) {\n\n        this.onChange($event);\n\n        model.value = ($event.target as HTMLInputElement).checked;\n    }\n\n    onCustomEvent($event: any, type: string | null = null, bypass: boolean = false) {\n\n        let emitter = this.customEvent as EventEmitter<DynamicFormControlCustomEvent>;\n\n        if (bypass) {\n\n            emitter.emit($event);\n\n        } else if (isString(type)) {\n\n            emitter.emit({customEvent: $event, customEventType: type});\n        }\n    }\n\n    onFocus($event: any) {\n\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n\n        this._hasFocus = true;\n        this.focus.emit($event);\n    }\n}\n","import { QueryList } from \"@angular/core\";\nimport { FormArray } from \"@angular/forms\";\nimport { DynamicFormControlComponent } from \"./dynamic-form-control.component\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormArrayModel } from \"../model/form-array/dynamic-form-array.model\";\n\nexport abstract class DynamicFormArrayComponent extends DynamicFormControlComponent {\n\n    model: DynamicFormArrayModel;\n    templates: QueryList<DynamicTemplateDirective> | undefined;\n\n    get array(): FormArray {\n        return this.control as FormArray;\n    }\n\n    get startTemplate(): DynamicTemplateDirective | undefined {\n        return this.layoutService.getStartTemplate(this.model, this.templates);\n    }\n\n    get endTemplate(): DynamicTemplateDirective | undefined {\n        return this.layoutService.getEndTemplate(this.model, this.templates);\n    }\n}\n","import { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormArrayGroupModel } from \"../model/form-array/dynamic-form-array.model\";\nimport { isObject } from \"../utils/core.utils\";\n\nexport enum DynamicFormControlEventType {Blur = \"blur\", Change = \"change\", Custom = \"custom\", Focus = \"focus\"}\n\nexport interface DynamicFormControlEvent {\n\n    $event: Event | FocusEvent | DynamicFormControlEvent | any;\n    context: DynamicFormArrayGroupModel | null;\n    control: FormControl;\n    group: FormGroup;\n    model: DynamicFormControlModel;\n    type: string;\n}\n\nexport interface DynamicFormControlCustomEvent {\n\n    customEvent: any;\n    customEventType: string;\n}\n\nexport function isDynamicFormControlEvent($event: any): $event is DynamicFormControlEvent {\n    return isObject($event) && $event.hasOwnProperty(\"$event\");\n}","import { EventEmitter, QueryList } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlContainerComponent } from \"./dynamic-form-control-container.component\";\nimport { DynamicFormControlEvent, DynamicFormControlEventType } from \"./dynamic-form-control.event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../model/dynamic-form.model\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormService } from \"../service/dynamic-form.service\";\nimport { DynamicFormLayout, DynamicFormLayoutService } from \"../service/dynamic-form-layout.service\";\n\nexport abstract class DynamicFormComponent {\n\n    formGroup: FormGroup;\n    formModel: DynamicFormModel;\n    formLayout: DynamicFormLayout;\n\n    components: QueryList<DynamicFormControlContainerComponent>;\n    templates: QueryList<DynamicTemplateDirective>;\n\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    focus: EventEmitter<DynamicFormControlEvent>;\n    customEvent: EventEmitter<DynamicFormControlEvent>;\n\n    protected constructor(protected formService: DynamicFormService, protected layoutService: DynamicFormLayoutService) {}\n\n    trackByFn(_index: number, model: DynamicFormControlModel): string {\n        return model.id;\n    }\n\n    getClass(model: DynamicFormControlModel, context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace): string {\n\n        let controlLayout = this.layoutService.findByModel(model, this.formLayout) || model.layout as DynamicFormControlLayout;\n\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n\n    onEvent($event: DynamicFormControlEvent, type: string) {\n\n        switch (type) {\n\n            case DynamicFormControlEventType.Blur:\n                this.blur.emit($event);\n                break;\n\n            case DynamicFormControlEventType.Change:\n                this.change.emit($event);\n                break;\n\n            case DynamicFormControlEventType.Focus:\n                this.focus.emit($event);\n                break;\n\n            case DynamicFormControlEventType.Custom:\n                this.customEvent.emit($event);\n                break;\n        }\n    }\n}\n","import \"reflect-metadata\";\n\ndeclare let Reflect: any;\n\nexport const METADATA_KEY_SERIALIZABLE = \"SERIALIZABLE\";\n\nexport interface SerializableProperty {\n\n    key: string;\n    name: string;\n}\n\nexport function serializable(name?: string): (target: any, key: string) => void {\n\n    return function (target, key) {\n        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, {key: key, name: name || key}, target, key);\n    };\n}\n\nexport function getSerializables(target: any): SerializableProperty[] {\n\n    let serializables = [];\n\n    for (let key in target) {\n\n        let metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);\n\n        if (metadata) {\n            serializables.push(metadata);\n        }\n    }\n\n    return serializables;\n}\n\nexport function serialize(target: any, prototype?: any): Object {\n\n    return getSerializables(prototype || target).reduce((prev: any, prop: SerializableProperty) => {\n\n        prev[prop.name] = target[prop.key];\n\n        return prev;\n\n    }, {});\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { DynamicPathable } from \"./misc/dynamic-form-control-path.model\";\nimport { DynamicFormControlRelation } from \"./misc/dynamic-form-control-relation.model\";\nimport { DynamicValidatorsConfig } from \"./misc/dynamic-form-control-validation.model\";\nimport { serializable, serialize } from \"../decorator/serializable.decorator\";\nimport { isBoolean, isObject, isString } from \"../utils/core.utils\";\n\nexport type FormHooks = 'change' | 'blur' | 'submit';\n\nexport interface DynamicFormControlModelConfig {\n\n    asyncValidators?: DynamicValidatorsConfig;\n    disabled?: boolean;\n    errorMessages?: DynamicValidatorsConfig;\n    hidden?: boolean;\n    id: string;\n    label?: string;\n    labelTooltip?: string;\n    controlTooltip?: string;\n    name?: string;\n    relations?: DynamicFormControlRelation[];\n    updateOn?: FormHooks;\n    validators?: DynamicValidatorsConfig;\n}\n\nexport abstract class DynamicFormControlModel implements DynamicPathable {\n\n    @serializable() asyncValidators: DynamicValidatorsConfig | null;\n    @serializable(\"disabled\") _disabled: boolean;\n    @serializable() errorMessages: DynamicValidatorsConfig | null;\n    @serializable() hidden: boolean;\n    @serializable() id: string;\n    @serializable() label: string | null;\n    @serializable() labelTooltip: string | null;\n    @serializable() controlTooltip: string | null;\n    @serializable() layout: DynamicFormControlLayout | null;\n    @serializable() name: string;\n    parent: DynamicPathable | null = null;\n    @serializable() relations: DynamicFormControlRelation[];\n    @serializable() updateOn: FormHooks | null;\n    @serializable() validators: DynamicValidatorsConfig | null;\n\n    private readonly disabled$: BehaviorSubject<boolean>;\n\n    readonly disabledChanges: Observable<boolean>;\n\n    abstract readonly type: string;\n\n    protected constructor(config: DynamicFormControlModelConfig, layout: DynamicFormControlLayout | null = null) {\n\n        this.asyncValidators = config.asyncValidators || null;\n        this.errorMessages = config.errorMessages || null;\n        this.hidden = isBoolean(config.hidden) ? config.hidden : false;\n        this.id = config.id;\n        this.label = config.label || null;\n        this.labelTooltip = config.labelTooltip || null;\n        this.controlTooltip = config.controlTooltip || null;\n        this.layout = layout;\n        this.name = config.name || config.id;\n        this.relations = Array.isArray(config.relations) ? config.relations : [];\n        this.updateOn = isString(config.updateOn) ? config.updateOn : null;\n        this.validators = config.validators || null;\n\n        this.disabled$ = new BehaviorSubject(isBoolean(config.disabled) ? config.disabled : false);\n        this.disabled$.subscribe(disabled => this._disabled = disabled);\n        this.disabledChanges = this.disabled$.asObservable();\n    }\n\n    get disabled(): boolean {\n        return this.disabled$.getValue();\n    }\n\n    set disabled(disabled: boolean) {\n        this.disabled$.next(disabled);\n    }\n\n    get hasErrorMessages(): boolean {\n        return isObject(this.errorMessages);\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { DynamicFormControlModel, DynamicFormControlModelConfig } from \"./dynamic-form-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean, isObject } from \"../utils/core.utils\";\n\nexport interface DynamicFormValueControlModelConfig<T> extends DynamicFormControlModelConfig {\n\n    additional?: { [key: string]: any };\n    hint?: string;\n    required?: boolean;\n    tabIndex?: number;\n    value?: T;\n}\n\nexport abstract class DynamicFormValueControlModel<T> extends DynamicFormControlModel {\n\n    @serializable() additional: { [key: string]: any } | null;\n    @serializable() hint: string | null;\n    @serializable() required: boolean;\n    @serializable() tabIndex: number | null;\n    @serializable(\"value\") private _value: T | null;\n\n    private readonly value$: BehaviorSubject<T>;\n\n    readonly valueChanges: Observable<T>;\n\n    protected constructor(config: DynamicFormValueControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.additional = isObject(config.additional) ? config.additional : null;\n        this.hint = config.hint || null;\n        this.required = isBoolean(config.required) ? config.required : false;\n        this.tabIndex = config.tabIndex || null;\n\n        this.value$ = new BehaviorSubject(config.value !== null && config.value !== undefined ? config.value : null);\n        this.value$.subscribe(value => this._value = value);\n        this.valueChanges = this.value$.asObservable();\n    }\n\n    get value(): T | null {\n        return this.value$.getValue();\n    }\n\n    set value(value: T | null) {\n        this.value$.next(value);\n    }\n\n    getAdditional(key: string, defaultValue: any | null | undefined = undefined): any {\n        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;\n    }\n}\n","import { DynamicFormControlModel, DynamicFormControlModelConfig } from \"../dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../dynamic-form.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { DynamicPathable } from \"../misc/dynamic-form-control-path.model\";\nimport { DynamicValidatorsConfig } from \"../misc/dynamic-form-control-validation.model\";\nimport { serializable, serialize } from \"../../decorator/serializable.decorator\";\nimport { isFunction, isNumber } from \"../../utils/core.utils\";\n\nexport class DynamicFormArrayGroupModel implements DynamicPathable {\n\n    $implicit: DynamicFormArrayGroupModel;\n    context: DynamicFormArrayModel;\n    @serializable() group: DynamicFormModel;\n    @serializable() index: number;\n\n    constructor(context: DynamicFormArrayModel, group: DynamicFormModel = [], index: number = -1) {\n\n        this.$implicit = this;\n        this.context = context;\n        this.group = group;\n        this.index = index;\n    }\n\n    get parent(): DynamicFormArrayModel {\n        return this.context;\n    }\n\n    get(index: number): DynamicFormControlModel {\n        return this.group[index];\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_ARRAY = \"ARRAY\";\n\nexport interface DynamicFormArrayModelConfig extends DynamicFormControlModelConfig {\n\n    groupAsyncValidators?: DynamicValidatorsConfig;\n    groupFactory?: () => DynamicFormModel;\n    groupValidators?: DynamicValidatorsConfig;\n    groups?: DynamicFormArrayGroupModel[] | null;\n    initialCount?: number;\n}\n\nexport class DynamicFormArrayModel extends DynamicFormControlModel {\n\n    @serializable() groupAsyncValidators: DynamicValidatorsConfig | null;\n    groupFactory: () => DynamicFormModel;\n    @serializable() groupValidators: DynamicValidatorsConfig | null;\n    @serializable() groups: DynamicFormArrayGroupModel[] = [];\n    @serializable() initialCount: number;\n\n    @serializable() readonly groupPrototype: DynamicFormModel; // only to recreate model from JSON\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;\n\n    constructor(config: DynamicFormArrayModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        if (isFunction(config.groupFactory)) {\n            this.groupFactory = config.groupFactory;\n        } else {\n            throw new Error(\"group factory function must be specified for DynamicFormArrayModel\");\n        }\n\n        this.groupAsyncValidators = config.groupAsyncValidators || null;\n        this.groupPrototype = this.groupFactory();\n        this.groupValidators = config.groupValidators || null;\n        this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;\n\n        if (Array.isArray(config.groups)) {\n\n            config.groups.forEach((arrayGroup, index) => {\n                this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, arrayGroup.index || index));\n            });\n\n        } else {\n\n            for (let index = 0; index < this.initialCount; index++) {\n                this.addGroup();\n            }\n        }\n    }\n\n    private updateGroupIndex(): void {\n        this.groups.forEach((group, index) => group.index = index);\n    }\n\n    get size(): number {\n        return this.groups.length;\n    }\n\n    get(index: number): DynamicFormArrayGroupModel {\n        return this.groups[index];\n    }\n\n    addGroup(): DynamicFormArrayGroupModel {\n        return this.insertGroup(this.groups.length);\n    }\n\n    insertGroup(index: number): DynamicFormArrayGroupModel {\n\n        let group = new DynamicFormArrayGroupModel(this, this.groupFactory());\n\n        this.groups.splice(index, 0, group);\n        this.updateGroupIndex();\n\n        return group;\n    }\n\n    moveGroup(index: number, step: number): void {\n\n        this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));\n        this.updateGroupIndex();\n    }\n\n    removeGroup(index: number): void {\n\n        this.groups.splice(index, 1);\n        this.updateGroupIndex();\n    }\n\n    clear(): void {\n        this.groups.splice(0);\n        this.updateGroupIndex();\n    }\n}\n","import { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicCheckControlModelConfig extends DynamicFormValueControlModelConfig<boolean> {\n\n    labelPosition?: string;\n}\n\nexport abstract class DynamicCheckControlModel extends DynamicFormValueControlModel<boolean> {\n\n    @serializable() labelPosition: string | null;\n\n    protected constructor(config: DynamicCheckControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.labelPosition = config.labelPosition || null;\n        this.checked = isBoolean(this.value) ? this.value : false;\n    }\n\n    get checked(): boolean {\n        return this.value;\n    }\n\n    set checked(checked: boolean) {\n        this.value = checked;\n    }\n\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n}\n","import { DynamicCheckControlModel, DynamicCheckControlModelConfig } from \"../dynamic-check-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = \"CHECKBOX\";\n\nexport interface DynamicCheckboxModelConfig extends DynamicCheckControlModelConfig {\n\n    indeterminate?: boolean;\n}\n\nexport class DynamicCheckboxModel extends DynamicCheckControlModel {\n\n    @serializable() indeterminate: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n\n    constructor(config: DynamicCheckboxModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;\n    }\n}","export const AUTOCOMPLETE_OFF = \"off\";\nexport const AUTOCOMPLETE_ON = \"on\";\n\nexport const AUTOFILL_TOKEN_BILLING = \"billing\";\nexport const AUTOFILL_TOKEN_SHIPPING = \"shipping\";\n\nexport const AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];\n\nexport const AUTOFILL_TOKEN_HOME = \"home\";\nexport const AUTOFILL_TOKEN_WORK = \"work\";\nexport const AUTOFILL_TOKEN_MOBILE = \"mobile\";\nexport const AUTOFILL_TOKEN_FAX = \"fax\";\nexport const AUTOFILL_TOKEN_PAGER = \"pager\";\n\nexport const AUTOFILL_TOKENS_CONTACT = [\n    AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK\n];\n\nexport const AUTOFILL_FIELD_STREET_ADDRESS = \"street-address\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_1 = \"address-line1\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_2 = \"address-line2\";\nexport const AUTOFILL_FIELD_ADDRESS_LINE_3 = \"address-line3\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_4 = \"address-level4\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_3 = \"address-level3\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_2 = \"address-level2\";\nexport const AUTOFILL_FIELD_ADDRESS_LEVEL_1 = \"address-level1\";\n\nexport const AUTOFILL_FIELD_NAME = \"name\";\nexport const AUTOFILL_FIELD_HONORIFIC_PREFIX = \"honorific-prefix\";\nexport const AUTOFILL_FIELD_GIVEN_NAME = \"given-name\";\nexport const AUTOFILL_FIELD_ADDITIONAL_NAME = \"additional-name\";\nexport const AUTOFILL_FIELD_FAMILY_NAME = \"family-name\";\nexport const AUTOFILL_FIELD_HONORIFIC_SUFFIX = \"honorific-suffix\";\nexport const AUTOFILL_FIELD_NICKNAME = \"nickname\";\nexport const AUTOFILL_FIELD_USERNAME = \"username\";\n\nexport const AUTOFILL_FIELD_NEW_PASSWORD = \"new-password\";\nexport const AUTOFILL_FIELD_CURRENT_PASSWORD = \"current-password\";\n\nexport const AUTOFILL_FIELD_ORGANIZATION_TITLE = \"organization-title\";\nexport const AUTOFILL_FIELD_ORGANIZATION = \"organization\";\n\nexport const AUTOFILL_FIELD_COUNTRY = \"country\";\nexport const AUTOFILL_FIELD_COUNTRY_NAME = \"country-name\";\nexport const AUTOFILL_FIELD_POSTAL_CODE = \"postal-code\";\n\nexport const AUTOFILL_FIELD_CC_NAME = \"cc-name\";\nexport const AUTOFILL_FIELD_CC_GIVEN_NAME = \"cc-given-name\";\nexport const AUTOFILL_FIELD_CC_ADDITIONAL_NAME = \"cc-additional-name\";\nexport const AUTOFILL_FIELD_CC_FAMILY_NAME = \"cc-family-name\";\nexport const AUTOFILL_FIELD_CC_NUMBER = \"cc-number\";\nexport const AUTOFILL_FIELD_CC_EXP = \"cc-exp\";\nexport const AUTOFILL_FIELD_CC_EXP_MONTH = \"cc-exp-month\";\nexport const AUTOFILL_FIELD_CC_EXP_YEAR = \"cc-exp-year\";\nexport const AUTOFILL_FIELD_CC_CSC = \"cc-csc\";\nexport const AUTOFILL_FIELD_CC_TYPE = \"cc-type\";\n\nexport const AUTOFILL_FIELD_TRANSACTION_CURRENCY = \"transaction-currency\";\nexport const AUTOFILL_FIELD_TRANSACTION_AMOUNT = \"transaction-amount\";\n\nexport const AUTOFILL_FIELD_LANGUAGE = \"language\";\n\nexport const AUTOFILL_FIELD_BDAY = \"bday\";\nexport const AUTOFILL_FIELD_BDAY_DAY = \"bday-day\";\nexport const AUTOFILL_FIELD_BDAY_MONTH = \"bday-month\";\nexport const AUTOFILL_FIELD_BDAY_YEAR = \"bday-year\";\n\nexport const AUTOFILL_FIELD_SEX = \"sex\";\n\nexport const AUTOFILL_FIELD_URL = \"url\";\n\nexport const AUTOFILL_FIELD_PHOTO = \"photo\";\n\nexport const AUTOFILL_FIELDS = [\n\n    AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2,\n    AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3,\n    AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME,\n    AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME,\n    AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE,\n    AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE,\n    AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH,\n    AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY,\n    AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY,\n    AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO\n];\n\nexport const AUTOFILL_FIELD_TEL = \"tel\";\nexport const AUTOFILL_FIELD_TEL_COUNTRY_CODE = \"tel-country-code\";\nexport const AUTOFILL_FIELD_TEL_NATIONAL = \"tel-national\";\nexport const AUTOFILL_FIELD_TEL_AREA_CODE = \"tel-area-code\";\nexport const AUTOFILL_FIELD_TEL_LOCAL = \"tel-local\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_PREFIX = \"tel-local-prefix\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = \"tel-local-suffix\";\nexport const AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = \"tel-extension\";\nexport const AUTOFILL_FIELD_EMAIL = \"email\";\nexport const AUTOFILL_FIELD_IMPP = \"impp\";\n\nexport const AUTOFILL_FIELDS_CONTACT = [\n\n    AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE,\n    AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX,\n    AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP\n];\n\nexport function isAddressToken(token: string): boolean {\n    return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;\n}\n\nexport function isContactField(token: string): boolean {\n    return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;\n}\n\nexport function isContactToken(token: string): boolean {\n    return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;\n}\n\nexport function isField(token: string): boolean {\n    return AUTOFILL_FIELDS.indexOf(token) > -1;\n}\n\nexport function isSectionToken(token: string): boolean {\n    return token.startsWith(\"section-\");\n}\n\nexport function validate(tokens: string): boolean {\n\n    let toExpression = (total: string, currentValue: string) => `${total}|${currentValue}`,\n        tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression),\n        tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression),\n        fields = AUTOFILL_FIELDS.reduce(toExpression),\n        fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression),\n        regex = new RegExp(`^(section-\\\\w+\\\\s{1})?((${tokensAddress}){1}\\\\s)?((${fields}){1}|((${tokensContact}){1}\\\\s{1}(${fieldsContact})))$`);\n\n    return regex.test(tokens);\n}\n","import { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { AUTOCOMPLETE_ON } from \"../utils/autofill.utils\";\nimport { isBoolean, isNumber } from \"../utils/core.utils\";\n\nexport interface DynamicInputControlModelConfig<T> extends DynamicFormValueControlModelConfig<T> {\n\n    autoComplete?: string;\n    autoFocus?: boolean;\n    maxLength?: number;\n    minLength?: number;\n    placeholder?: string;\n    prefix?: string;\n    readOnly?: boolean;\n    spellCheck?: boolean;\n    suffix?: string;\n}\n\nexport abstract class DynamicInputControlModel<T> extends DynamicFormValueControlModel<T> {\n\n    @serializable() autoComplete: string;\n    @serializable() autoFocus: boolean;\n    @serializable() maxLength: number | null;\n    @serializable() minLength: number | null;\n    @serializable() placeholder: string;\n    @serializable() prefix: string | null;\n    @serializable() readOnly: boolean;\n    @serializable() spellCheck: boolean;\n    @serializable() suffix: string | null;\n\n    protected constructor(config: DynamicInputControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.autoComplete = config.autoComplete || AUTOCOMPLETE_ON;\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;\n        this.minLength = isNumber(config.minLength) ? config.minLength : null;\n        this.placeholder = config.placeholder || \"\";\n        this.prefix = config.prefix || null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;\n        this.suffix = config.suffix || null;\n    }\n}","import { isString } from \"./core.utils\";\n\nexport function maskToString(mask: string | RegExp | (string | RegExp)[]): string | string[] | null {\n\n    if (isString(mask)) {\n\n        return mask as string;\n\n    } else if (mask instanceof RegExp) {\n\n        return mask.toString();\n\n    } else if (Array.isArray(mask)) {\n\n        return mask.map(value => maskToString(value)) as string[];\n    }\n\n    return null;\n}\n\nexport function maskFromString(mask: string | string[]): string | RegExp | (string | RegExp)[] | null {\n\n    if (isString(mask)) {\n\n        let isRegExp = (mask as string).startsWith(\"/\") && (mask as string).endsWith(\"/\");\n\n        return isRegExp ? new RegExp((mask as string).slice(1, mask.length - 1)) : mask;\n\n    } else if (Array.isArray(mask)) {\n\n        return (mask as string[]).map(value => maskFromString(value)) as string[];\n    }\n\n    return null;\n}\n\nexport function parseReviver(_key: string, value: any): any {\n\n    let regexDateISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|([+\\-])([\\d|:]*))?$/;\n\n    return isString(value) && regexDateISO.test(value) ? new Date(value) : value;\n}\n","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { maskToString } from \"../../utils/json.utils\";\nimport { isBoolean, isNumber } from \"../../utils/core.utils\";\nimport { Observable, isObservable, of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\n\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = \"date\";\n//export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\n\nexport interface DynamicInputModelConfig extends DynamicInputControlModelConfig<string | number | Date | string[]> {\n\n    accept?: string;\n    inputType?: string;\n    list?: any[] | Observable<any[]>;\n    mask?: string | RegExp | Function | (string | RegExp)[];\n    max?: number | string | Date;\n    min?: number | string | Date;\n    multiple?: boolean;\n    pattern?: string;\n    step?: number;\n}\n\nexport class DynamicInputModel extends DynamicInputControlModel<string | number | Date | string[]> {\n\n    @serializable() accept: string | null;\n    @serializable() inputType: string;\n    files: FileList | null = null;\n    list$: Observable<any[]> | null = null;\n    @serializable() mask: string | RegExp | Function | (string | RegExp)[] | null;\n    @serializable() max: number | string | Date | null;\n    @serializable() min: number | string | Date | null;\n    @serializable() multiple: boolean | null;\n    @serializable() pattern: string | null;\n    @serializable() step: number | null;\n\n    @serializable(\"list\") private _list: any[] | null = null;\n    private readonly _listId: string | null = null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n\n    constructor(config: DynamicInputModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.accept = config.accept || null;\n        this.inputType = config.inputType || DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;\n        this.mask = config.mask || null;\n        this.max = config.max !== undefined ? config.max : null;\n        this.min = config.min !== undefined ? config.min : null;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : null;\n        this.pattern = config.pattern || null;\n        this.step = isNumber(config.step) ? config.step : null;\n\n        if (config.list !== undefined) {\n\n            this.list = config.list;\n            this._listId = `${this.id}List`;\n        }\n    }\n\n    get listId(): string | null {\n        return this._listId;\n    }\n\n    get hasList(): boolean {\n        return isObservable(this.list$);\n    }\n\n    set list(list: any[] | Observable<any[]> | null) {\n\n        if (Array.isArray(list)) {\n\n            this._list = list;\n            this.list$ = of(this._list);\n\n        } else if (isObservable(list)) {\n\n            this.list$ = (list as Observable<any[]>).pipe(tap(list => this._list = list));\n\n        } else {\n\n            this._list = null;\n            this.list$ = null;\n        }\n    }\n\n    toJSON() {\n\n        let json: any = super.toJSON();\n\n        if (this.mask !== null) { \n            if (this.mask instanceof Function) {\n                json.mask = this.mask;\n            } else {\n                json.mask = maskToString(this.mask);\n            }\n        }\n\n        return json;\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    OnChanges,\n    OnDestroy,\n    QueryList,\n    SimpleChange,\n    SimpleChanges,\n    Type,\n    ViewContainerRef\n} from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport {\n    DynamicFormControlCustomEvent,\n    DynamicFormControlEvent,\n    DynamicFormControlEventType,\n    isDynamicFormControlEvent\n} from \"./dynamic-form-control.event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValueControlModel } from \"../model/dynamic-form-value-control.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DynamicFormArrayGroupModel\n} from \"../model/form-array/dynamic-form-array.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX } from \"../model/checkbox/dynamic-checkbox.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DynamicInputModel\n} from \"../model/input/dynamic-input.model\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormControl } from \"./dynamic-form-control.interface\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormLayout, DynamicFormLayoutService } from \"../service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\nimport { DynamicFormComponentService } from \"../service/dynamic-form-component.service\";\nimport { isString } from \"../utils/core.utils\";\nimport { DynamicFormRelationService } from \"../service/dynamic-form-relation.service\";\n\nexport abstract class DynamicFormControlContainerComponent implements OnChanges, OnDestroy {\n\n    context: DynamicFormArrayGroupModel | null = null;\n    control: FormControl;\n    group: FormGroup;\n    hasFocus: boolean;\n    layout: DynamicFormLayout;\n    model: DynamicFormControlModel;\n\n    contentTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n    inputTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    customEvent: EventEmitter<DynamicFormControlEvent> | undefined;\n    focus: EventEmitter<DynamicFormControlEvent>;\n\n    componentViewContainerRef: ViewContainerRef;\n\n    protected componentRef: ComponentRef<DynamicFormControl>;\n    protected componentSubscriptions: Subscription[] = [];\n    protected subscriptions: Subscription[] = [];\n\n    protected constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n                          protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService,\n                          protected componentService: DynamicFormComponentService,\n                          protected relationService: DynamicFormRelationService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n        const groupChange = changes[\"group\"] as SimpleChange,\n              modelChange = changes[\"model\"] as SimpleChange;\n\n        if (modelChange) {\n\n            this.destroyFormControlComponent();\n            this.createFormControlComponent();\n        }\n\n        if (groupChange || modelChange) {\n\n            if (this.model) {\n\n                this.unsubscribe();\n\n                if (this.group) {\n\n                    this.control = this.group.get(this.model.id) as FormControl;\n                    this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));\n                }\n\n                this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));\n\n                if (this.model instanceof DynamicFormValueControlModel) {\n\n                    const model = this.model as DynamicFormValueControlModel<any>;\n\n                    this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));\n                }\n\n                if (this.model.relations.length > 0) {\n\n                    this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n\n        this.destroyFormControlComponent();\n        this.unsubscribe();\n    }\n\n    abstract get componentType(): Type<DynamicFormControl> | null;\n\n    get errorMessages(): string[] {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n\n    get hasHint(): boolean {\n        return isString((this.model as DynamicFormValueControlModel<any>).hint);\n    }\n\n    get hint(): string | null {\n        return (this.model as DynamicFormValueControlModel<any>).hint || null;\n    }\n\n    get hasLabel(): boolean {\n        return isString(this.model.label);\n    }\n\n    get isCheckbox(): boolean {\n        return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n    }\n\n    get elementId(): string {\n        return this.layoutService.getElementId(this.model);\n    }\n\n    get isInvalid(): boolean {\n        return this.control.invalid;\n    }\n\n    get isValid(): boolean {\n        return this.control.valid;\n    }\n\n    get showErrorMessages(): boolean {\n        return this.model.hasErrorMessages && this.control.touched && !this.hasFocus && this.isInvalid;\n    }\n\n    get templates(): QueryList<DynamicTemplateDirective> | undefined {\n        return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;\n    }\n\n    get startTemplate(): DynamicTemplateDirective | undefined {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getStartTemplate(this.model, this.templates) : undefined;\n    }\n\n    get endTemplate(): DynamicTemplateDirective | undefined {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getEndTemplate(this.model, this.templates) : undefined;\n    }\n\n    getClass(context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace, model: DynamicFormControlModel = this.model): string {\n\n        let controlLayout = this.layoutService.findByModel(model, this.layout) || model.layout as DynamicFormControlLayout;\n\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n\n    protected createFormControlComponent(): void {\n\n        let componentType = this.componentType;\n\n        if (componentType !== null) {\n\n            let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n            this.componentViewContainerRef.clear();\n            this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);\n\n            let instance = this.componentRef.instance;\n\n            instance.group = this.group;\n            instance.layout = this.layout;\n            instance.model = this.model as any;\n\n            if (this.templates) {\n                instance.templates = this.templates;\n            }\n\n            this.componentSubscriptions.push(instance.blur.subscribe(($event: any) => this.onBlur($event)));\n            this.componentSubscriptions.push(instance.change.subscribe(($event: any) => this.onChange($event)));\n            this.componentSubscriptions.push(instance.focus.subscribe(($event: any) => this.onFocus($event)));\n\n            if (instance.customEvent !== undefined) {\n                this.componentSubscriptions.push(\n                    instance.customEvent.subscribe(($event: any) => this.onCustomEvent($event)));\n            }\n\n            this.registerComponentRef(this.componentRef);\n        }\n    }\n\n    protected destroyFormControlComponent(): void {\n\n        if (this.componentRef) {\n\n            this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n            this.componentSubscriptions = [];\n\n            this.unregisterComponentRef();\n            this.componentRef.destroy();\n        }\n    }\n\n    protected createDynamicFormControlEvent($event: any, type: string): DynamicFormControlEvent {\n        return {$event, context: this.context, control: this.control, group: this.group, model: this.model, type};\n    }\n\n    unsubscribe(): void {\n\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    onControlValueChanges(value: any): void {\n\n        if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {\n            this.model.value = value;\n        }\n    }\n\n    onModelValueUpdates(value: any): void {\n\n        if (this.control.value !== value) {\n            this.control.setValue(value);\n        }\n    }\n\n    onModelDisabledUpdates(disabled: boolean): void {\n        disabled ? this.control.disable() : this.control.enable();\n    }\n\n    onChange($event: Event | DynamicFormControlEvent | any): void {\n\n        if ($event instanceof Event) { // native HTML5 change event\n\n            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n\n                let model = this.model as DynamicInputModel;\n\n                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n\n                    let inputElement: any = $event.target || $event.srcElement;\n\n                    model.files = inputElement.files as FileList;\n                }\n            }\n\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n\n        } else if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.change.emit($event);\n\n        } else { // custom library value change event\n\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n    }\n\n    onBlur($event: FocusEvent | DynamicFormControlEvent | any): void {\n\n        if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.blur.emit($event);\n\n        } else { // native HTML 5 or UI library blur event\n\n            this.hasFocus = false;\n            this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));\n        }\n    }\n\n    onFocus($event: FocusEvent | DynamicFormControlEvent | any): void {\n\n        if (isDynamicFormControlEvent($event)) { // event bypass\n\n            this.focus.emit($event);\n\n        } else { // native HTML 5 or UI library focus event\n\n            this.hasFocus = true;\n            this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));\n        }\n    }\n\n    onCustomEvent($event: DynamicFormControlEvent | DynamicFormControlCustomEvent): void {\n\n        let emitter = this.customEvent as EventEmitter<DynamicFormControlEvent>;\n\n        if (isDynamicFormControlEvent($event)) { // child event bypass\n\n            emitter.emit($event);\n\n        } else { // native UI library custom event\n\n            emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));\n        }\n    }\n\n    private registerComponentRef(instanceRef: ComponentRef<DynamicFormControl>): void {\n\n        let index;\n\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            index = this.context.index;\n        }\n\n        this.componentService.registerFormControlRef(this.model, instanceRef, index);\n    }\n\n    private unregisterComponentRef(): void {\n\n        let index;\n\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            index = this.context.index;\n        }\n\n        this.componentService.unregisterFormControlRef(this.model.id, index);\n    }\n}\n","import { AfterViewInit, QueryList, TemplateRef } from \"@angular/core\";\nimport { DynamicTemplateableFormControl } from \"./dynamic-templateable-form-control.interface\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormControlComponent } from \"./dynamic-form-control.component\";\nimport { isString } from \"../utils/core.utils\";\n\nexport abstract class DynamicTemplateableFormControlComponent extends DynamicFormControlComponent implements DynamicTemplateableFormControl, AfterViewInit {\n\n    readonly templateDirectives: Map<string, string>;\n\n    templates: QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\n\n    ngAfterViewInit() {\n\n        this.layoutService\n            .filterTemplatesByModel(this.model, this.templates)\n            .forEach(template => this.bindTemplate(template));\n    }\n\n    abstract get viewChild(): any;\n\n    abstract mapTemplate(template: DynamicTemplateDirective): DynamicTemplateDirective | TemplateRef<any>;\n\n    bindTemplate(template: DynamicTemplateDirective) {\n\n        if (isString(template.as) && this.templateDirectives.has(template.as)) {\n\n            let property = this.templateDirectives.get(template.as) as string;\n\n            this.viewChild[property] = this.mapTemplate(template);\n        }\n    }\n}","import { Directive, ElementRef, Input, Renderer2, AfterViewInit } from \"@angular/core\";\n\n@Directive({\n    selector: \"[dynamicId]\"\n})\nexport class DynamicIdDirective implements AfterViewInit {\n\n    @Input() dynamicId: string | boolean;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngAfterViewInit() {\n\n        if (this.dynamicId) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, \"id\", this.dynamicId as string);\n        }\n    }\n}","import { Directive, ElementRef, Input, Renderer2, AfterViewInit } from \"@angular/core\";\nimport { isString } from \"../utils/core.utils\";\n\n@Directive({\n    selector: \"[dynamicList]\"\n})\nexport class DynamicListDirective implements AfterViewInit {\n\n    @Input(\"dynamicList\") listId: string | null;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngAfterViewInit() {\n\n        if (isString(this.listId)) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, \"list\", this.listId as string);\n        }\n    }\n}","import { Directive, Input, TemplateRef } from \"@angular/core\";\n\nexport enum DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT { Start = \"START\", End = \"END\"}\n\n@Directive({\n    selector: \"ng-template[modelId],ng-template[modelType]\"\n})\nexport class DynamicTemplateDirective {\n\n    @Input() align: string = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;\n    @Input() as: string | null = null;\n    @Input() index: number | undefined;\n    @Input() modelId: string;\n    @Input() modelType: string;\n\n    constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\n\nexport type DynamicDateControlValue = string | object | Date;\n\nexport interface DynamicDateControlModelConfig extends DynamicFormValueControlModelConfig<DynamicDateControlValue> {\n\n    format?: string;\n    max?: DynamicDateControlValue;\n    min?: DynamicDateControlValue;\n    placeholder?: string;\n}\n\nexport abstract class DynamicDateControlModel extends DynamicFormValueControlModel<DynamicDateControlValue> {\n\n    @serializable() format: string | null;\n    @serializable() max: DynamicDateControlValue | null;\n    @serializable() min: DynamicDateControlValue | null;\n    @serializable() placeholder: string | null;\n\n    protected constructor(config: DynamicDateControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.format = config.format || null;\n        this.max = config.max || null;\n        this.min = config.min || null;\n        this.placeholder = config.placeholder || null;\n    }\n}","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicFileControlModelConfig extends DynamicFormValueControlModelConfig<File | File[]> {\n\n    multiple?: boolean;\n}\n\nexport abstract class DynamicFileControlModel extends DynamicFormValueControlModel<File | File[]> {\n\n    @serializable() multiple: boolean;\n\n    protected constructor(config: DynamicFileControlModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n    }\n}","import { Observable, isObservable, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { DynamicFormValueControlModel, DynamicFormValueControlModelConfig } from \"./dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"./misc/dynamic-form-control-layout.model\";\nimport { serializable, serialize } from \"../decorator/serializable.decorator\";\nimport { isBoolean } from \"../utils/core.utils\";\n\nexport interface DynamicFormOptionConfig<T> {\n\n    disabled?: boolean;\n    label?: string;\n    value: T;\n}\n\nexport class DynamicFormOption<T> {\n\n    @serializable() disabled: boolean;\n    @serializable() label: string | null;\n    @serializable() value: T;\n\n    constructor(config: DynamicFormOptionConfig<T>) {\n\n        this.disabled = isBoolean(config.disabled) ? config.disabled : false;\n        this.label = config.label || null;\n        this.value = config.value;\n    }\n\n    get text() {\n        return this.label;\n    }\n\n    set text(text: string | null) {\n        this.label = text;\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n\nexport interface DynamicOptionControlModelConfig<T> extends DynamicFormValueControlModelConfig<T | T[]> {\n\n    options?: DynamicFormOptionConfig<T>[] | Observable<DynamicFormOptionConfig<T>[]>;\n}\n\nexport abstract class DynamicOptionControlModel<T> extends DynamicFormValueControlModel<T | T[]> {\n\n    @serializable(\"options\") private _options: DynamicFormOption<T>[] = [];\n    options$: Observable<DynamicFormOption<T>[]>;\n\n    protected constructor(config: DynamicOptionControlModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.options = config.options;\n    }\n\n    private updateOptions$(): void {\n        this.options$ = of(this.options);\n    }\n\n    set options(options: any) {\n\n        if (Array.isArray(options)) {\n\n            this._options = (options as DynamicFormOptionConfig<T>[]).map(optionConfig => {\n                return new DynamicFormOption<T>(optionConfig);\n            });\n\n            this.updateOptions$();\n\n        } else if (isObservable(options)) {\n\n            this.options$ = (options as Observable<DynamicFormOptionConfig<T>[]>).pipe(\n                map(optionsConfig => {\n\n                    let options = optionsConfig.map(optionConfig => new DynamicFormOption<T>(optionConfig));\n\n                    this._options = options;\n\n                    return options;\n                }));\n\n        } else {\n\n            this.updateOptions$();\n        }\n    }\n\n    get options(): any {\n        return this._options;\n    }\n\n    add(optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T> {\n        return this.insert(this.options.length, optionConfig);\n    }\n\n    get(index: number): DynamicFormOption<T> {\n        return this.options[index];\n    }\n\n    insert(index: number, optionConfig: DynamicFormOptionConfig<T>): DynamicFormOption<T> {\n\n        let option = new DynamicFormOption(optionConfig);\n\n        this.options.splice(index, 0, option);\n        this.updateOptions$();\n\n        return option;\n    }\n\n    remove(...indices: number[]): void {\n\n        indices.forEach(index => this.options.splice(index, 1));\n        this.updateOptions$();\n    }\n\n    abstract select(...indices: number[]): void;\n}","import { DynamicFormControlModel, DynamicFormControlModelConfig } from \"../dynamic-form-control.model\";\nimport { DynamicFormModel } from \"../dynamic-form.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\n\nexport interface DynamicFormGroupModelConfig extends DynamicFormControlModelConfig {\n\n    group?: DynamicFormModel;\n    legend?: string;\n}\n\nexport class DynamicFormGroupModel extends DynamicFormControlModel {\n\n    @serializable() group: DynamicFormModel = [];\n    @serializable() legend: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.group = Array.isArray(config.group) ? config.group : [];\n        this.legend = config.legend || null;\n    }\n\n    get(index: number): DynamicFormControlModel {\n        return this.group[index];\n    }\n\n    set(index: number, controlModel: DynamicFormControlModel,): void {\n        this.group[index] = controlModel;\n    }\n\n    add(controlModel: DynamicFormControlModel): void {\n        this.group.push(controlModel);\n    }\n\n    insert(index: number, controlModel: DynamicFormControlModel): void {\n        this.group.splice(index, 0, controlModel);\n    }\n\n    move(index: number, step: number): void {\n        this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n    }\n\n    remove(index: number) {\n        this.group.splice(index, 1);\n    }\n\n    size(): number {\n        return this.group.length;\n    }\n}\n","import { DynamicFormGroupModel, DynamicFormGroupModelConfig } from \"../form-group/dynamic-form-group.model\";\nimport { DynamicCheckboxModel } from \"./dynamic-checkbox.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\n\nexport class DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n\n    @serializable() group: DynamicCheckboxModel[];\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, layout?: DynamicFormControlLayout) {\n        super(config, layout);\n    }\n\n    check(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = true);\n    }\n\n    uncheck(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = false);\n    }\n\n    checkAll(): void {\n        this.group.forEach(model => model.checked = true);\n    }\n\n    uncheckAll(): void {\n        this.group.forEach(model => model.checked = false);\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isString } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = \"COLORPICKER\";\n\nexport interface DynamicColorPickerModelConfig extends DynamicFormValueControlModelConfig<string | object> {\n\n    format?: string;\n    inline?: boolean;\n}\n\nexport class DynamicColorPickerModel extends DynamicFormValueControlModel<string | object> {\n\n    @serializable() format: string | null;\n    @serializable() inline: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;\n\n    constructor(config: DynamicColorPickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.format = isString(config.format) ? config.format : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n    }\n}","import {\n    DynamicDateControlModel,\n    DynamicDateControlModelConfig,\n    DynamicDateControlValue\n} from \"../dynamic-date-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isString } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = \"DATEPICKER\";\n\nexport interface DynamicDatePickerModelConfig extends DynamicDateControlModelConfig {\n\n    autoFocus?: boolean;\n    focusedDate?: DynamicDateControlValue;\n    inline?: boolean;\n    prefix?: string;\n    readOnly?: boolean;\n    suffix?: string;\n    toggleIcon?: string;\n    toggleLabel?: string;\n}\n\nexport class DynamicDatePickerModel extends DynamicDateControlModel {\n\n    @serializable() autoFocus: boolean;\n    @serializable() focusedDate: DynamicDateControlValue | null;\n    @serializable() inline: boolean;\n    @serializable() prefix: string | null;\n    @serializable() readOnly: boolean;\n    @serializable() suffix: string | null;\n    @serializable() toggleIcon: string | null;\n    @serializable() toggleLabel: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;\n\n    constructor(config: DynamicDatePickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.focusedDate = config.focusedDate || null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n        this.prefix = config.prefix || null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;\n        this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;\n        this.suffix = config.suffix || null;\n    }\n}","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_EDITOR = \"EDITOR\";\n\nexport interface DynamicEditorModelConfig extends DynamicInputControlModelConfig<string> {\n}\n\nexport class DynamicEditorModel extends DynamicInputControlModel<string> {\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;\n\n    constructor(config: DynamicEditorModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n    }\n}","import { DynamicFileControlModelConfig, DynamicFileControlModel } from \"../dynamic-file-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = \"FILE_UPLOAD\";\n\nexport interface DynamicFileUploadModelConfig extends DynamicFileControlModelConfig {\n\n    accept?: string[];\n    autoUpload?: boolean;\n    maxSize?: number;\n    minSize?: number;\n    removeUrl?: string;\n    showFileList?: boolean;\n    url?: string;\n}\n\nexport class DynamicFileUploadModel extends DynamicFileControlModel {\n\n    @serializable() accept: string[] | null;\n    @serializable() autoUpload: boolean;\n    @serializable() maxSize: number | null;\n    @serializable() minSize: number | null;\n    @serializable() removeUrl: string | null;\n    @serializable() showFileList: boolean;\n    @serializable() url: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;\n\n    constructor(config: DynamicFileUploadModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.accept = Array.isArray(config.accept) ? config.accept : null;\n        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;\n        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;\n        this.minSize = isNumber(config.minSize) ? config.minSize : null;\n        this.removeUrl = config.removeUrl || null;\n        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;\n        this.url = config.url || null;\n    }\n}","import { DynamicOptionControlModel, DynamicOptionControlModelConfig } from \"../dynamic-option-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = \"RADIO_GROUP\";\n\nexport interface DynamicRadioGroupModelConfig<T> extends DynamicOptionControlModelConfig<T> {\n\n    legend?: string;\n}\n\nexport class DynamicRadioGroupModel<T> extends DynamicOptionControlModel<T> {\n\n    @serializable() legend: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;\n\n    constructor(config: DynamicRadioGroupModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.legend = config.legend || null;\n    }\n\n    select(index: number): void {\n        this.value = this.get(index).value;\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_RATING = \"RATING\";\n\nexport interface DynamicRatingModelConfig extends DynamicFormValueControlModelConfig<number> {\n\n    max?: number;\n}\n\nexport class DynamicRatingModel extends DynamicFormValueControlModel<number> {\n\n    @serializable() max: number | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_RATING;\n\n    constructor(config: DynamicRatingModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.max = isNumber(config.max) ? config.max : 10;\n    }\n}","import { ÉµlooseIdentical as looseIdentical } from \"@angular/core\";\nimport { DynamicOptionControlModel, DynamicOptionControlModelConfig } from \"../dynamic-option-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isFunction } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SELECT = \"SELECT\";\n\nexport interface DynamicSelectModelConfig<T> extends DynamicOptionControlModelConfig<T> {\n\n    compareWithFn?: (o1: any, o2: any) => boolean;\n    filterable?: boolean;\n    multiple?: boolean;\n    placeholder?: string;\n    prefix?: string;\n    suffix?: string;\n}\n\nexport class DynamicSelectModel<T> extends DynamicOptionControlModel<T> {\n\n    compareWithFn: (value1: any, value2: any) => boolean;\n    @serializable() filterable: boolean;\n    @serializable() multiple: boolean;\n    @serializable() placeholder: string;\n    @serializable() prefix: string | null;\n    @serializable() suffix: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SELECT;\n\n    constructor(config: DynamicSelectModelConfig<T>, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : looseIdentical;\n        this.filterable = isBoolean(config.filterable) ? config.filterable : false;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n        this.placeholder = config.placeholder || \"\";\n        this.prefix = config.prefix || null;\n        this.suffix = config.suffix || null;\n    }\n\n    select(...indices: number[]): void {\n\n        const value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;\n\n        this.value = value;\n    }\n}\n","import { DynamicFormValueControlModelConfig, DynamicFormValueControlModel } from \"../dynamic-form-value-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean, isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SLIDER = \"SLIDER\";\n\nexport interface DynamicSliderModelConfig extends DynamicFormValueControlModelConfig<number> {\n\n    max?: number;\n    min?: number;\n    step?: number;\n    vertical?: boolean;\n}\n\nexport class DynamicSliderModel extends DynamicFormValueControlModel<number> {\n\n    @serializable() max: number | null;\n    @serializable() min: number | null;\n    @serializable() step: number | null;\n    @serializable() vertical: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;\n\n    constructor(config: DynamicSliderModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.max = isNumber(config.max) ? config.max : 10;\n        this.min = isNumber(config.min) ? config.min : 0;\n        this.step = isNumber(config.step) ? config.step : 1;\n        this.vertical = isBoolean(config.vertical) ? config.vertical : false;\n    }\n}","import { DynamicCheckControlModel, DynamicCheckControlModelConfig } from \"../dynamic-check-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_SWITCH = \"SWITCH\";\n\nexport interface DynamicSwitchModelConfig extends DynamicCheckControlModelConfig {\n\n    offLabel?: string;\n    onLabel?: string;\n}\n\nexport class DynamicSwitchModel extends DynamicCheckControlModel {\n\n    @serializable() offLabel: string | null;\n    @serializable() onLabel: string | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;\n\n    constructor(config: DynamicSwitchModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.offLabel = config.offLabel || null;\n        this.onLabel = config.onLabel || null;\n    }\n}","import { DynamicInputControlModel, DynamicInputControlModelConfig } from \"../dynamic-input-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isNumber } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = \"TEXTAREA\";\n\nexport const DYNAMIC_FORM_TEXTAREA_WRAP_HARD = \"hard\";\nexport const DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = \"soft\";\n\nexport interface DynamicTextAreaModelConfig extends DynamicInputControlModelConfig<string> {\n\n    cols?: number;\n    rows?: number;\n    wrap?: string;\n}\n\nexport class DynamicTextAreaModel extends DynamicInputControlModel<string> {\n\n    @serializable() cols: number;\n    @serializable() rows: number;\n    @serializable() wrap: string;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;\n\n    constructor(config: DynamicTextAreaModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.cols = isNumber(config.cols) ? config.cols : 20;\n        this.rows = isNumber(config.rows) ? config.rows : 2;\n        this.wrap = config.wrap || DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;\n    }\n}","import { DynamicDateControlModel, DynamicDateControlModelConfig } from \"../dynamic-date-control.model\";\nimport { DynamicFormControlLayout } from \"../misc/dynamic-form-control-layout.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\nimport { isBoolean } from \"../../utils/core.utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = \"TIMEPICKER\";\n\nexport interface DynamicTimePickerModelConfig extends DynamicDateControlModelConfig {\n\n    meridian?: boolean;\n    showSeconds?: boolean;\n}\n\nexport class DynamicTimePickerModel extends DynamicDateControlModel {\n\n    @serializable() meridian: boolean;\n    @serializable() showSeconds: boolean;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;\n\n    constructor(config: DynamicTimePickerModelConfig, layout?: DynamicFormControlLayout) {\n\n        super(config, layout);\n\n        this.meridian = isBoolean(config.meridian) ? config.meridian : false;\n        this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;\n    }\n}","import { InjectionToken } from \"@angular/core\";\nimport { AsyncValidatorFn, ValidatorFn } from \"@angular/forms\";\n\nexport type Validator = ValidatorFn | AsyncValidatorFn;\n\nexport type ValidatorFactory = (args: any) => Validator;\n\nexport type ValidatorsToken = Validator[];\n\nexport type ValidatorsMap = Map<string, Validator | ValidatorFactory>;\n\nexport const DYNAMIC_VALIDATORS = new InjectionToken<ValidatorsMap>(\"DYNAMIC_VALIDATORS\");\n","import { Injectable, Inject, Optional } from \"@angular/core\";\nimport {\n    AbstractControl,\n    AsyncValidatorFn,\n    ValidatorFn,\n    Validators,\n    NG_VALIDATORS,\n    NG_ASYNC_VALIDATORS\n} from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport {\n    DynamicValidatorDescriptor,\n    DynamicValidatorsConfig\n} from \"../model/misc/dynamic-form-control-validation.model\";\nimport { isObject, isString } from \"../utils/core.utils\";\nimport { DYNAMIC_VALIDATORS, Validator, ValidatorFactory, ValidatorsToken } from \"./dynamic-form.validators\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormValidationService {\n\n    constructor(@Optional() @Inject(NG_VALIDATORS) private NG_VALIDATORS: ValidatorFn[],\n                @Optional() @Inject(NG_ASYNC_VALIDATORS) private NG_ASYNC_VALIDATORS: AsyncValidatorFn[],\n                @Optional() @Inject(DYNAMIC_VALIDATORS) private DYNAMIC_VALIDATORS: Map<string, Validator | ValidatorFactory>) {}\n\n\n    private getValidatorFn(validatorName: string, validatorArgs: any = null,\n                           validatorsToken: ValidatorsToken = this.NG_VALIDATORS): Validator | never {\n\n        let validatorFn: ValidatorFactory | Validator | undefined;\n\n        if (Validators.hasOwnProperty(validatorName)) { // Built-in Angular Validators\n\n            validatorFn = (Validators as any)[validatorName];\n\n        } else { // Custom Validators\n\n            if (this.DYNAMIC_VALIDATORS && this.DYNAMIC_VALIDATORS.has(validatorName)) {\n                validatorFn = this.DYNAMIC_VALIDATORS.get(validatorName);\n\n            } else if (validatorsToken) {\n                validatorFn = validatorsToken.find(validatorFn => validatorFn.name === validatorName);\n            }\n        }\n\n        if (validatorFn === undefined) { // throw when no validator could be resolved\n            throw new Error(`validator \"${validatorName}\" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);\n        }\n\n        if (validatorArgs !== null) {\n            return (validatorFn as ValidatorFactory)(validatorArgs);\n        }\n\n        return validatorFn as Validator;\n    }\n\n\n    private getValidatorFns(validatorsConfig: DynamicValidatorsConfig,\n                            validatorsToken: ValidatorsToken = this.NG_VALIDATORS): Validator[] {\n\n        let validatorFns: Validator[] = [];\n\n        if (isObject(validatorsConfig)) {\n\n            validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {\n\n                let validatorConfigValue = (validatorsConfig as DynamicValidatorsConfig)[validatorConfigKey];\n\n                if (this.isValidatorDescriptor(validatorConfigValue)) {\n\n                    let descriptor = validatorConfigValue as DynamicValidatorDescriptor;\n\n                    return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);\n                }\n\n                return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);\n            });\n        }\n\n        return validatorFns;\n    }\n\n\n    private parseErrorMessageConfig(template: string, model: DynamicFormControlModel, error: any = null): string {\n\n        return template.replace(/{{\\s*(.+?)\\s*}}/mg, (_match: string, expression: string) => {\n\n            let propertySource: any = model,\n                propertyName: string = expression;\n\n            if (expression.indexOf(\"validator.\") >= 0 && error) {\n\n                propertySource = error;\n                propertyName = expression.replace(\"validator.\", \"\");\n            }\n\n            return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ?\n                propertySource[propertyName] : null;\n        });\n    }\n\n\n    getValidator(validatorName: string, validatorArgs: any = null): ValidatorFn {\n        return this.getValidatorFn(validatorName, validatorArgs) as ValidatorFn;\n    }\n\n\n    getAsyncValidator(validatorName: string, validatorArgs: any = null): AsyncValidatorFn {\n        return this.getValidatorFn(validatorName, validatorArgs, this.NG_ASYNC_VALIDATORS) as AsyncValidatorFn;\n    }\n\n\n    getValidators(validatorsConfig: DynamicValidatorsConfig): ValidatorFn[] {\n        return this.getValidatorFns(validatorsConfig) as ValidatorFn[];\n    }\n\n\n    getAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig): AsyncValidatorFn[] {\n        return this.getValidatorFns(asyncValidatorsConfig, this.NG_ASYNC_VALIDATORS) as AsyncValidatorFn[];\n    }\n\n\n    updateValidators(validatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl,\n                     model: DynamicFormControlModel): void {\n\n        model.validators = validatorsConfig;\n\n        if (validatorsConfig === null) {\n\n            control.clearValidators();\n\n        } else {\n            control.setValidators(this.getValidators(validatorsConfig));\n        }\n\n        control.updateValueAndValidity();\n    }\n\n\n    updateAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl,\n                          model: DynamicFormControlModel): void {\n\n        model.asyncValidators = asyncValidatorsConfig;\n\n        if (asyncValidatorsConfig === null) {\n\n            control.clearAsyncValidators();\n\n        } else {\n            control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));\n        }\n\n        control.updateValueAndValidity();\n    }\n\n\n    createErrorMessages(control: AbstractControl, model: DynamicFormControlModel): string[] {\n\n        let messages: string[] = [];\n\n        if (model.hasErrorMessages) {\n\n            let messagesConfig = model.errorMessages as DynamicValidatorsConfig;\n\n            Object.keys(control.errors || {}).forEach(validationErrorKey => {\n\n                let messageKey = validationErrorKey;\n\n                if (validationErrorKey === \"minlength\" || validationErrorKey === \"maxlength\") {\n                    messageKey = messageKey.replace(\"length\", \"Length\");\n                }\n\n                if (messagesConfig.hasOwnProperty(messageKey)) {\n\n                    let validationError = control.getError(validationErrorKey),\n                        messageTemplate = messagesConfig[messageKey] as string;\n\n                    messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));\n                }\n            });\n        }\n\n        return messages;\n    }\n\n\n    isFormHook(value: any): boolean {\n        return isString(value) && [\"blur\", \"change\", \"submit\"].indexOf(value) !== -1;\n    }\n\n\n    isValidatorDescriptor(value: any): boolean {\n\n        if (isObject(value)) {\n            return value.hasOwnProperty(\"name\") && value.hasOwnProperty(\"args\");\n        }\n\n        return false;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, FormArray, FormControl, FormGroup } from \"@angular/forms\";\nimport { AbstractControlOptions } from \"@angular/forms\";\nimport { DynamicFormControlModel, FormHooks } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValueControlModel } from \"../model/dynamic-form-value-control.model\";\nimport {\n    DynamicFormArrayModel,\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DynamicFormArrayGroupModel\n} from \"../model/form-array/dynamic-form-array.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_GROUP, DynamicFormGroupModel } from \"../model/form-group/dynamic-form-group.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DynamicCheckboxGroupModel\n} from \"../model/checkbox/dynamic-checkbox-group.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DynamicCheckboxModel } from \"../model/checkbox/dynamic-checkbox.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER,\n    DynamicColorPickerModel\n} from \"../model/colorpicker/dynamic-colorpicker.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n    DynamicDatePickerModel\n} from \"../model/datepicker/dynamic-datepicker.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DynamicEditorModel } from \"../model/editor/dynamic-editor.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD,\n    DynamicFileUploadModel\n} from \"../model/file-upload/dynamic-file-upload.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_INPUT, DynamicInputModel } from \"../model/input/dynamic-input.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\n    DynamicRadioGroupModel\n} from \"../model/radio/dynamic-radio-group.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_RATING, DynamicRatingModel } from \"../model/rating/dynamic-rating.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SELECT, DynamicSelectModel } from \"../model/select/dynamic-select.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DynamicSliderModel } from \"../model/slider/dynamic-slider.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DynamicSwitchModel } from \"../model/switch/dynamic-switch.model\";\nimport { DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DynamicTextAreaModel } from \"../model/textarea/dynamic-textarea.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER,\n    DynamicTimePickerModel\n} from \"../model/timepicker/dynamic-timepicker.model\";\nimport { DynamicFormValidationService } from \"./dynamic-form-validation.service\";\nimport { DynamicFormModel, DynamicUnionFormModel } from \"../model/dynamic-form.model\";\nimport { DynamicPathable } from \"../model/misc/dynamic-form-control-path.model\";\nimport { DynamicValidatorsConfig } from \"../model/misc/dynamic-form-control-validation.model\";\nimport { maskFromString, parseReviver } from \"../utils/json.utils\";\nimport { isString } from \"../utils/core.utils\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormService {\n\n    constructor(private validationService: DynamicFormValidationService) {}\n\n\n    private createAbstractControlOptions(validatorsConfig: DynamicValidatorsConfig | null = null,\n                                         asyncValidatorsConfig: DynamicValidatorsConfig | null = null,\n                                         updateOn: FormHooks | null = null): AbstractControlOptions {\n\n        return {\n\n            asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,\n\n            validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,\n\n            updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : \"change\"\n        };\n    }\n\n\n    createFormArray(formArrayModel: DynamicFormArrayModel): FormArray {\n\n        let controls: AbstractControl[] = [],\n            options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators,\n                formArrayModel.updateOn);\n\n        for (let index = 0; index < formArrayModel.size; index++) {\n\n            let groupModel = formArrayModel.get(index),\n                groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators,\n                    formArrayModel.groupAsyncValidators, formArrayModel.updateOn);\n\n            controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));\n        }\n\n        return new FormArray(controls, options);\n    }\n\n\n    createFormGroup(formModel: DynamicFormModel, options: AbstractControlOptions | null = null,\n                    parent: DynamicPathable | null = null): FormGroup {\n\n        let controls: { [controlId: string]: AbstractControl; } = {};\n\n        formModel.forEach(model => {\n\n            model.parent = parent;\n\n            switch (model.type) {\n\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n\n                    controls[model.id] = this.createFormArray(model as DynamicFormArrayModel);\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n\n                    let groupModel = model as DynamicFormGroupModel,\n                        groupOptions = this.createAbstractControlOptions(groupModel.validators,\n                            groupModel.asyncValidators, groupModel.updateOn);\n\n                    controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);\n                    break;\n\n                default:\n\n                    let controlModel = model as DynamicFormValueControlModel<any>,\n                        controlState = {value: controlModel.value, disabled: controlModel.disabled},\n                        controlOptions = this.createAbstractControlOptions(controlModel.validators,\n                            controlModel.asyncValidators, controlModel.updateOn);\n\n                    controls[model.id] = new FormControl(controlState, controlOptions);\n            }\n        });\n\n        return new FormGroup(controls, options);\n    }\n\n\n    getPathSegment(model: DynamicPathable): string {\n        return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : (model as DynamicFormControlModel).id;\n    }\n\n\n    getPath(model: DynamicPathable, join: boolean = false): string[] | string {\n\n        let path = [this.getPathSegment(model)],\n            parent = model.parent;\n\n        while (parent) {\n\n            path.unshift(this.getPathSegment(parent));\n            parent = parent.parent;\n        }\n\n        return join ? path.join(\".\") : path;\n    }\n\n\n    addFormGroupControl(formGroup: FormGroup, formModel: DynamicUnionFormModel, ...models: DynamicFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);\n\n        } else {\n\n            let _formModel = formModel as DynamicFormModel;\n            this.insertFormGroupControl(_formModel.length, formGroup, _formModel, ...models);\n        }\n    }\n\n\n    moveFormGroupControl(index: number, step: number, formModel: DynamicUnionFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            formModel.move(index, step);\n\n        } else {\n\n            let _formModel = formModel as DynamicFormModel;\n            _formModel.splice(index + step, 0, ..._formModel.splice(index, 1));\n        }\n    }\n\n\n    insertFormGroupControl(index: number, formGroup: FormGroup, formModel: DynamicUnionFormModel,\n                           ...models: DynamicFormModel): void {\n\n        let parent = formModel instanceof DynamicFormGroupModel ? formModel : null,\n            controls = this.createFormGroup(models, null, parent).controls;\n\n        Object.keys(controls).forEach((controlName, idx) => {\n\n            let controlModel = models[idx];\n\n            if (formModel instanceof DynamicFormGroupModel) {\n                formModel.insert(index, controlModel);\n\n            } else {\n                (formModel as DynamicFormModel).splice(index, 0, controlModel);\n            }\n\n            formGroup.addControl(controlName, controls[controlName]);\n        });\n    }\n\n\n    removeFormGroupControl(index: number, formGroup: FormGroup, formModel: DynamicUnionFormModel): void {\n\n        if (formModel instanceof DynamicFormGroupModel) {\n\n            formGroup.removeControl(formModel.get(index).id);\n            formModel.remove(index);\n\n        } else {\n\n            formGroup.removeControl(formModel[index].id);\n            (formModel as DynamicFormModel).splice(index, 1);\n        }\n    }\n\n\n    addFormArrayGroup(formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        let groupModel = formArrayModel.addGroup();\n\n        formArray.push(this.createFormGroup(groupModel.group, null, groupModel));\n    }\n\n\n    insertFormArrayGroup(index: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        let groupModel = formArrayModel.insertGroup(index);\n\n        formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));\n    }\n\n\n    moveFormArrayGroup(index: number, step: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        let newIndex = index + step,\n            moveUp = step >= 0;\n\n        if ((index >= 0 && index < formArrayModel.size) && (newIndex >= 0 && newIndex < formArrayModel.size)) {\n\n            let movingGroups: AbstractControl[] = [];\n\n            for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {\n                movingGroups.push(formArray.at(i));\n            }\n\n            movingGroups.forEach((formControl, idx) => {\n\n                let position;\n\n                if (moveUp) {\n                    position = idx === 0 ? newIndex : index + idx - 1;\n\n                } else {\n                    position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;\n                }\n\n                formArray.setControl(position, formControl);\n            });\n\n            formArrayModel.moveGroup(index, step);\n\n        } else {\n            throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);\n        }\n    }\n\n\n    removeFormArrayGroup(index: number, formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        formArray.removeAt(index);\n        formArrayModel.removeGroup(index);\n    }\n\n\n    clearFormArray(formArray: FormArray, formArrayModel: DynamicFormArrayModel): void {\n\n        formArray.clear();\n        formArrayModel.clear();\n    }\n\n\n    findById(id: string, formModel: DynamicFormModel): DynamicFormControlModel | null {\n\n        let result = null,\n            findByIdFn = (id: string, groupModel: DynamicFormModel): void => {\n\n                for (let controlModel of groupModel) {\n\n                    if (controlModel.id === id) {\n                        result = controlModel;\n                        break;\n                    }\n\n                    if (controlModel instanceof DynamicFormGroupModel) {\n                        findByIdFn(id, (controlModel as DynamicFormGroupModel).group);\n                    }\n                }\n            };\n\n        findByIdFn(id, formModel);\n\n        return result;\n    }\n\n\n    findModelById(id: string, formModel: DynamicFormModel): DynamicFormControlModel | null {\n        return this.findById(id, formModel);\n    }\n\n\n    findControlByModel(model: DynamicFormControlModel, group: FormGroup): AbstractControl | null {\n        return group.root.get(this.getPath(model, true));\n    }\n\n\n    fromJSON(json: string | object[]): DynamicFormModel | never {\n\n        let formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json,\n            formModel: DynamicFormModel = [];\n\n        formModelJSON.forEach((model: any) => {\n\n            let layout = model.layout || null;\n\n            switch (model.type) {\n\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    let formArrayModel = model as DynamicFormArrayModel;\n\n                    if (Array.isArray(formArrayModel.groups)) {\n\n                        formArrayModel.groups.forEach((groupModel: DynamicFormArrayGroupModel) => {\n                            groupModel.group = this.fromJSON(groupModel.group) as DynamicFormModel;\n                        });\n                    }\n\n                    formArrayModel.groupFactory = () => {\n                        return this.fromJSON(formArrayModel.groupPrototype);\n                    };\n\n                    formModel.push(new DynamicFormArrayModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                    formModel.push(new DynamicCheckboxModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    model.group = this.fromJSON(model.group) as DynamicCheckboxModel[];\n                    formModel.push(new DynamicCheckboxGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:\n                    formModel.push(new DynamicColorPickerModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n                    formModel.push(new DynamicDatePickerModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n                    formModel.push(new DynamicEditorModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:\n                    model.value = null;\n                    formModel.push(new DynamicFileUploadModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicFormGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                    let inputModel = model as DynamicInputModel;\n\n                    if (inputModel.mask !== null) {\n                        if (!(inputModel.mask instanceof Function)) {\n                            inputModel.mask = maskFromString(inputModel.mask as string);\n                        }\n                    }\n\n                    formModel.push(new DynamicInputModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                    formModel.push(new DynamicRadioGroupModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n                    formModel.push(new DynamicRatingModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                    formModel.push(new DynamicSelectModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                    formModel.push(new DynamicSliderModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                    formModel.push(new DynamicSwitchModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                    formModel.push(new DynamicTextAreaModel(model, layout));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                    formModel.push(new DynamicTimePickerModel(model, layout));\n                    break;\n\n                default:\n                    throw new Error(`unknown form control model type defined on JSON object with id \"${model.id}\"`);\n            }\n        });\n\n        return formModel;\n    }\n}\n","import { ComponentRef, Inject, Injectable, InjectionToken, Optional, Type } from \"@angular/core\";\nimport { DynamicFormControl } from \"../component/dynamic-form-control.interface\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { isFunction, isNumber } from \"../utils/core.utils\";\n\nexport type DynamicFormControlRef = ComponentRef<DynamicFormControl>;\n\nexport type DynamicFormControlMapFn = (model: DynamicFormControlModel) => Type<DynamicFormControl> | null;\n\nexport const DYNAMIC_FORM_CONTROL_MAP_FN = new InjectionToken<DynamicFormControlMapFn>(\"DYNAMIC_FORM_CONTROL_MAP_FN\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormComponentService {\n\n    private componentRefs: { [key: string]: DynamicFormControlRef | DynamicFormControlRef[] } = {};\n\n    constructor(@Inject(DYNAMIC_FORM_CONTROL_MAP_FN) @Optional() private readonly DYNAMIC_FORM_CONTROL_MAP_FN: any) {\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN as DynamicFormControlMapFn;\n    }\n\n    getFormControlRef(modelId: string, index?: number): DynamicFormControlRef | undefined {\n\n        const ref: DynamicFormControlRef | DynamicFormControlRef[] = this.componentRefs[modelId];\n\n        if (isNumber(index)) {\n\n            return Array.isArray(ref) ? ref[index] : undefined;\n\n        } else {\n            return ref as DynamicFormControlRef;\n        }\n    }\n\n    registerFormControlRef(model: DynamicFormControlModel, instance: DynamicFormControlRef, index?: number): void {\n\n        if (isNumber(index)) {\n\n            const arrayRef: DynamicFormControlRef[] = this.componentRefs[model.id] as DynamicFormControlRef[] || [];\n\n            if (Array.isArray(arrayRef)) {\n\n                arrayRef.splice(index, 0, instance);\n                this.componentRefs[model.id] = arrayRef;\n\n            } else {\n                console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);\n            }\n\n        } else {\n            this.componentRefs[model.id] = instance;\n        }\n\n    }\n\n    unregisterFormControlRef(modelId: string, index?: number): void {\n\n        const componentRef = this.componentRefs[modelId];\n\n        if (isNumber(index)) {\n\n            if (Array.isArray(componentRef) && componentRef[index] !== undefined) {\n                componentRef.splice(index, 1);\n            }\n\n        } else if (componentRef !== undefined) {\n            delete this.componentRefs[modelId];\n        }\n    }\n\n    getCustomComponentType(model: DynamicFormControlModel): Type<DynamicFormControl> | null {\n        return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;\n    }\n}\n","import { Injectable, QueryList } from \"@angular/core\";\nimport {\n    DynamicFormControlLayout,\n    DynamicFormControlLayoutConfig,\n    DynamicFormControlLayoutContext,\n    DynamicFormControlLayoutPlace\n} from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormArrayGroupModel } from \"../model/form-array/dynamic-form-array.model\";\nimport {\n    DynamicTemplateDirective,\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT\n} from \"../directive/dynamic-template.directive\";\nimport { isObject } from \"../utils/core.utils\";\n\nexport type DynamicFormLayout = { [id: string]: DynamicFormControlLayout };\n\nexport type DynamicFormControlTemplates = QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormLayoutService {\n\n    findById(id: string, formLayout: DynamicFormLayout | null): DynamicFormControlLayout | null {\n\n        if (isObject(formLayout)) {\n\n            for (let key of Object.keys(formLayout)) {\n\n                if (key === id) {\n                    return formLayout[key];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    findByModel(model: DynamicFormControlModel, formLayout: DynamicFormLayout | null): DynamicFormControlLayout | null {\n\n        let controlLayout: DynamicFormControlLayout = null;\n\n        if (isObject(formLayout)) {\n\n            for (let key of Object.keys(formLayout)) {\n\n                key.split(\",\").forEach(substring => {\n\n                    const selector = substring.trim();\n\n                    if (selector === model.id || selector === model.type) {\n                        controlLayout = formLayout[key];\n                    }\n                });\n            }\n        }\n\n        return controlLayout;\n    }\n\n    filterTemplatesByModel(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] {\n\n        const filterCallback: (template: DynamicTemplateDirective) => boolean = (template: DynamicTemplateDirective) => {\n            return template.modelId === model.id || template.modelType === model.type;\n        };\n\n        if (templates instanceof QueryList) {\n            return templates.filter(filterCallback);\n\n        } else if (Array.isArray(templates)) {\n            return templates.filter(filterCallback);\n        }\n\n        return [];\n    }\n\n    getAlignedTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates, alignment: DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT): DynamicTemplateDirective | undefined {\n\n        return this.filterTemplatesByModel(model, templates)\n            .find(template => template.as === null && template.align === alignment);\n    }\n\n    /*\n    getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {\n        return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);\n    }\n    */\n    getStartTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective | undefined {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);\n    }\n\n    getEndTemplate(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective | undefined {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);\n    }\n\n    getClass(layout: DynamicFormControlLayout | null, context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace): string {\n\n        if (layout !== null && layout.hasOwnProperty(context)) {\n\n            let config = layout[context] as DynamicFormControlLayoutConfig;\n\n            if (config.hasOwnProperty(place)) {\n                return config[place] as string;\n            }\n        }\n\n        return \"\";\n    }\n\n    getElementId(model: DynamicFormControlModel): string {\n\n        let id = model.id, parent = model.parent;\n\n        while (parent !== null) {\n\n            if (parent instanceof DynamicFormArrayGroupModel) {\n\n                id = `${parent.context.id}-${parent.index}-${model.id}`;\n                break;\n            }\n\n            parent = parent.parent;\n        }\n\n        return id;\n    }\n}\n","import { InjectionToken, Injector, ValueProvider } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormValidationService } from \"./dynamic-form-validation.service\";\nimport { isObject } from \"../utils/core.utils\";\n\nexport const MATCH_DISABLED = \"DISABLED\";\nexport const MATCH_ENABLED = \"ENABLED\";\nexport const MATCH_HIDDEN = \"HIDDEN\";\nexport const MATCH_OPTIONAL = \"OPTIONAL\";\nexport const MATCH_REQUIRED = \"REQUIRED\";\nexport const MATCH_VISIBLE = \"VISIBLE\";\n\nexport const AND_OPERATOR = \"AND\";\nexport const OR_OPERATOR = \"OR\";\n\nexport interface DynamicFormControlMatcher {\n\n    match: string;\n    opposingMatch: string | null;\n\n    onChange(hasMatch: boolean, model: DynamicFormControlModel, control: FormControl, injector: Injector): void;\n}\n\nexport const DYNAMIC_MATCHERS = new InjectionToken<DynamicFormControlMatcher>(\"DYNAMIC_MATCHERS\");\n\nexport const DisabledMatcher: DynamicFormControlMatcher = {\n\n    match: MATCH_DISABLED,\n    opposingMatch: MATCH_ENABLED,\n    onChange(hasMatch, model) {\n        model.disabled = hasMatch;\n    }\n};\n\nexport const HiddenMatcher: DynamicFormControlMatcher = {\n\n    match: MATCH_HIDDEN,\n    opposingMatch: MATCH_VISIBLE,\n    onChange(hasMatch, model) {\n        model.hidden = hasMatch;\n    }\n};\n\nexport const RequiredMatcher: DynamicFormControlMatcher = {\n\n    match: MATCH_REQUIRED,\n    opposingMatch: MATCH_OPTIONAL,\n    onChange(hasMatch, model, control, injector) {\n\n        let validatorsConfig = null;\n\n        if (hasMatch) {\n\n            validatorsConfig = isObject(model.validators) ? {...model.validators, required: null} : {required: null};\n\n        } else {\n\n            if (isObject(model.validators)) {\n\n                delete model.validators[\"required\"];\n                validatorsConfig = {...model.validators};\n            }\n        }\n\n        injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);\n    }\n};\n\nexport const DISABLED_MATCHER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: DisabledMatcher,\n    multi: true\n};\n\nexport const HIDDEN_MATCHER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: HiddenMatcher,\n    multi: true\n};\n\nexport const REQUIRED_MATCHER: ValueProvider = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: RequiredMatcher,\n    multi: true\n};\n\nexport const DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER, HIDDEN_MATCHER, REQUIRED_MATCHER];\n","import { Inject, Injectable, Injector, Optional } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport {\n    AND_OPERATOR,\n    DYNAMIC_MATCHERS,\n    DynamicFormControlMatcher,\n    OR_OPERATOR\n} from \"./dynamic-form-relation.matchers\";\nimport { DynamicFormControlRelation, } from \"../model/misc/dynamic-form-control-relation.model\";\nimport { startWith } from \"rxjs/operators\";\nimport { merge, Subscription } from \"rxjs\";\n\nexport type DynamicRelatedFormControls = { [key: string]: FormControl };\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DynamicFormRelationService {\n\n    constructor(@Optional() @Inject(DYNAMIC_MATCHERS) private DYNAMIC_MATCHERS: DynamicFormControlMatcher[],\n                private injector: Injector) {}\n\n    getRelatedFormControls(model: DynamicFormControlModel, group: FormGroup): DynamicRelatedFormControls {\n\n        const conditionReducer = (controls, condition) => {\n\n            const path = condition.rootPath || condition.id;\n\n            if (!controls.hasOwnProperty(path)) {\n\n                const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);\n\n                control instanceof FormControl ? controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);\n            }\n\n            return controls;\n        };\n\n        const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);\n\n        return model.relations.reduce(relationReducer, {});\n    }\n\n    findRelationByMatcher(relations: DynamicFormControlRelation[], matcher: DynamicFormControlMatcher): DynamicFormControlRelation | undefined {\n        return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));\n    }\n\n    matchesCondition(relation: DynamicFormControlRelation, relatedFormControls: DynamicRelatedFormControls, matcher: DynamicFormControlMatcher): boolean {\n\n        const operator = relation.operator || OR_OPERATOR;\n\n        return relation.when.reduce((hasAlreadyMatched, condition, index) => {\n\n            const path = condition.rootPath || condition.id;\n\n            let relatedFormControl;\n\n            for (let [key, control] of Object.entries(relatedFormControls)) {\n                if (key === path) {\n                    relatedFormControl = control;\n                    break;\n                }\n            }\n\n            if (relatedFormControl && relation.match === matcher.match) {\n\n                if (index > 0 && operator === AND_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n\n                if (index > 0 && operator === OR_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n\n                return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;\n            }\n\n            if (relatedFormControl && relation.match === matcher.opposingMatch) {\n\n                if (index > 0 && operator === AND_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n\n                if (index > 0 && operator === OR_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n\n                return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);\n            }\n\n            return false;\n\n        }, false);\n    }\n\n    subscribeRelations(model: DynamicFormControlModel, group: FormGroup, control: FormControl): Subscription[] {\n\n        const relatedFormControls = this.getRelatedFormControls(model, group), subscriptions: Subscription[] = [];\n\n        Object.values(relatedFormControls).forEach(relatedControl => {\n\n            const valueChanges = relatedControl.valueChanges.pipe(startWith(relatedControl.value));\n            const statusChanges = relatedControl.statusChanges.pipe(startWith(relatedControl.status));\n\n            subscriptions.push(merge(valueChanges, statusChanges).subscribe(() => {\n\n                this.DYNAMIC_MATCHERS.forEach(matcher => {\n\n                    const relation = this.findRelationByMatcher(model.relations, matcher);\n\n                    if (relation !== undefined) {\n\n                        const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);\n                        matcher.onChange(hasMatch, model, control, this.injector);\n                    }\n                });\n            }));\n        });\n\n        return subscriptions;\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { DynamicIdDirective } from \"./directive/dynamic-id.directive\";\nimport { DynamicListDirective } from \"./directive/dynamic-list.directive\";\nimport { DynamicTemplateDirective } from \"./directive/dynamic-template.directive\";\nimport { DynamicFormService } from \"./service/dynamic-form.service\";\nimport { DynamicFormLayoutService } from \"./service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"./service/dynamic-form-validation.service\";\nimport { DynamicFormComponentService } from \"./service/dynamic-form-component.service\";\nimport { DynamicFormRelationService } from \"./service/dynamic-form-relation.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        DynamicIdDirective,\n        DynamicListDirective,\n        DynamicTemplateDirective\n    ],\n    exports: [\n        DynamicIdDirective,\n        DynamicListDirective,\n        DynamicTemplateDirective\n    ]\n})\nexport class DynamicFormsCoreModule {\n\n    /*@deprecated*/\n    static forRoot(): ModuleWithProviders {\n\n        return {\n            ngModule: DynamicFormsCoreModule,\n            providers: [\n                DynamicFormService,\n                DynamicFormLayoutService,\n                DynamicFormValidationService,\n                DynamicFormComponentService,\n                DynamicFormRelationService\n            ]\n        };\n    }\n}\n"],"names":["tslib_1.__extends","BehaviorSubject","tslib_1.__decorate","isObservable","of","tap","Directive","ElementRef","Renderer2","Input","TemplateRef","map","looseIdentical","InjectionToken","Validators","Injectable","Optional","Inject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","FormArray","FormControl","FormGroup","tslib_1.__values","QueryList","startWith","merge","Injector","NgModule","CommonModule","ReactiveFormsModule"],"mappings":"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"}