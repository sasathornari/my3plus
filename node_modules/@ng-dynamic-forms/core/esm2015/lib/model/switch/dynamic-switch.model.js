/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicCheckControlModel } from "../dynamic-check-control.model";
import { serializable } from "../../decorator/serializable.decorator";
/** @type {?} */
export const DYNAMIC_FORM_CONTROL_TYPE_SWITCH = "SWITCH";
/**
 * @record
 */
export function DynamicSwitchModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicSwitchModelConfig.prototype.offLabel;
    /** @type {?|undefined} */
    DynamicSwitchModelConfig.prototype.onLabel;
}
export class DynamicSwitchModel extends DynamicCheckControlModel {
    /**
     * @param {?} config
     * @param {?=} layout
     */
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;
        this.offLabel = config.offLabel || null;
        this.onLabel = config.onLabel || null;
    }
}
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicSwitchModel.prototype, "offLabel", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicSwitchModel.prototype, "onLabel", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicSwitchModel.prototype, "type", void 0);
if (false) {
    /** @type {?} */
    DynamicSwitchModel.prototype.offLabel;
    /** @type {?} */
    DynamicSwitchModel.prototype.onLabel;
    /** @type {?} */
    DynamicSwitchModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1zd2l0Y2gubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL21vZGVsL3N3aXRjaC9keW5hbWljLXN3aXRjaC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBa0MsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUxRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7O0FBRXRFLE1BQU0sT0FBTyxnQ0FBZ0MsR0FBRyxRQUFROzs7O0FBRXhELDhDQUlDOzs7SUFGRyw0Q0FBa0I7O0lBQ2xCLDJDQUFpQjs7QUFHckIsTUFBTSxPQUFPLGtCQUFtQixTQUFRLHdCQUF3Qjs7Ozs7SUFPNUQsWUFBWSxNQUFnQyxFQUFFLE1BQWlDO1FBRTNFLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFKRCxTQUFJLEdBQVcsZ0NBQWdDLENBQUM7UUFNckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDO0lBQzFDLENBQUM7Q0FDSjtBQVptQjtJQUFmLFlBQVksRUFBRTs7b0RBQXlCO0FBQ3hCO0lBQWYsWUFBWSxFQUFFOzttREFBd0I7QUFFdkI7SUFBZixZQUFZLEVBQUU7O2dEQUEwRDs7O0lBSHpFLHNDQUF3Qzs7SUFDeEMscUNBQXVDOztJQUV2QyxrQ0FBeUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbWljQ2hlY2tDb250cm9sTW9kZWwsIER5bmFtaWNDaGVja0NvbnRyb2xNb2RlbENvbmZpZyB9IGZyb20gXCIuLi9keW5hbWljLWNoZWNrLWNvbnRyb2wubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbExheW91dCB9IGZyb20gXCIuLi9taXNjL2R5bmFtaWMtZm9ybS1jb250cm9sLWxheW91dC5tb2RlbFwiO1xuaW1wb3J0IHsgc2VyaWFsaXphYmxlIH0gZnJvbSBcIi4uLy4uL2RlY29yYXRvci9zZXJpYWxpemFibGUuZGVjb3JhdG9yXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX1NXSVRDSCA9IFwiU1dJVENIXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY1N3aXRjaE1vZGVsQ29uZmlnIGV4dGVuZHMgRHluYW1pY0NoZWNrQ29udHJvbE1vZGVsQ29uZmlnIHtcblxuICAgIG9mZkxhYmVsPzogc3RyaW5nO1xuICAgIG9uTGFiZWw/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBEeW5hbWljU3dpdGNoTW9kZWwgZXh0ZW5kcyBEeW5hbWljQ2hlY2tDb250cm9sTW9kZWwge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIG9mZkxhYmVsOiBzdHJpbmcgfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSBvbkxhYmVsOiBzdHJpbmcgfCBudWxsO1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIHJlYWRvbmx5IHR5cGU6IHN0cmluZyA9IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfU1dJVENIO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBEeW5hbWljU3dpdGNoTW9kZWxDb25maWcsIGxheW91dD86IER5bmFtaWNGb3JtQ29udHJvbExheW91dCkge1xuXG4gICAgICAgIHN1cGVyKGNvbmZpZywgbGF5b3V0KTtcblxuICAgICAgICB0aGlzLm9mZkxhYmVsID0gY29uZmlnLm9mZkxhYmVsIHx8IG51bGw7XG4gICAgICAgIHRoaXMub25MYWJlbCA9IGNvbmZpZy5vbkxhYmVsIHx8IG51bGw7XG4gICAgfVxufSJdfQ==