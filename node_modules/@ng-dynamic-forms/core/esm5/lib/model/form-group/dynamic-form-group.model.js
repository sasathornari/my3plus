/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicFormControlModel } from "../dynamic-form-control.model";
import { serializable } from "../../decorator/serializable.decorator";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_GROUP = "GROUP";
/**
 * @record
 */
export function DynamicFormGroupModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicFormGroupModelConfig.prototype.group;
    /** @type {?|undefined} */
    DynamicFormGroupModelConfig.prototype.legend;
}
var DynamicFormGroupModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicFormGroupModel, _super);
    function DynamicFormGroupModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.group = [];
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;
        _this.group = Array.isArray(config.group) ? config.group : [];
        _this.legend = config.legend || null;
        return _this;
    }
    /**
     * @param {?} index
     * @return {?}
     */
    DynamicFormGroupModel.prototype.get = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        return this.group[index];
    };
    /**
     * @param {?} index
     * @param {?} controlModel
     * @return {?}
     */
    DynamicFormGroupModel.prototype.set = /**
     * @param {?} index
     * @param {?} controlModel
     * @return {?}
     */
    function (index, controlModel) {
        this.group[index] = controlModel;
    };
    /**
     * @param {?} controlModel
     * @return {?}
     */
    DynamicFormGroupModel.prototype.add = /**
     * @param {?} controlModel
     * @return {?}
     */
    function (controlModel) {
        this.group.push(controlModel);
    };
    /**
     * @param {?} index
     * @param {?} controlModel
     * @return {?}
     */
    DynamicFormGroupModel.prototype.insert = /**
     * @param {?} index
     * @param {?} controlModel
     * @return {?}
     */
    function (index, controlModel) {
        this.group.splice(index, 0, controlModel);
    };
    /**
     * @param {?} index
     * @param {?} step
     * @return {?}
     */
    DynamicFormGroupModel.prototype.move = /**
     * @param {?} index
     * @param {?} step
     * @return {?}
     */
    function (index, step) {
        var _a;
        (_a = this.group).splice.apply(_a, tslib_1.__spread([index + step, 0], this.group.splice(index, 1)));
    };
    /**
     * @param {?} index
     * @return {?}
     */
    DynamicFormGroupModel.prototype.remove = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.group.splice(index, 1);
    };
    /**
     * @return {?}
     */
    DynamicFormGroupModel.prototype.size = /**
     * @return {?}
     */
    function () {
        return this.group.length;
    };
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Array)
    ], DynamicFormGroupModel.prototype, "group", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicFormGroupModel.prototype, "legend", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicFormGroupModel.prototype, "type", void 0);
    return DynamicFormGroupModel;
}(DynamicFormControlModel));
export { DynamicFormGroupModel };
if (false) {
    /** @type {?} */
    DynamicFormGroupModel.prototype.group;
    /** @type {?} */
    DynamicFormGroupModel.prototype.legend;
    /** @type {?} */
    DynamicFormGroupModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3JtLWdyb3VwLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nLWR5bmFtaWMtZm9ybXMvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9mb3JtLWdyb3VwL2R5bmFtaWMtZm9ybS1ncm91cC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBaUMsTUFBTSwrQkFBK0IsQ0FBQztBQUd2RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7O0FBRXRFLE1BQU0sS0FBTywrQkFBK0IsR0FBRyxPQUFPOzs7O0FBRXRELGlEQUlDOzs7SUFGRyw0Q0FBeUI7O0lBQ3pCLDZDQUFnQjs7QUFHcEI7SUFBMkMsaURBQXVCO0lBTzlELCtCQUFZLE1BQW1DLEVBQUUsTUFBaUM7UUFBbEYsWUFFSSxrQkFBTSxNQUFNLEVBQUUsTUFBTSxDQUFDLFNBSXhCO1FBWGUsV0FBSyxHQUFxQixFQUFFLENBQUM7UUFHcEIsVUFBSSxHQUFXLCtCQUErQixDQUFDO1FBTXBFLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUM3RCxLQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDOztJQUN4QyxDQUFDOzs7OztJQUVELG1DQUFHOzs7O0lBQUgsVUFBSSxLQUFhO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7OztJQUVELG1DQUFHOzs7OztJQUFILFVBQUksS0FBYSxFQUFFLFlBQXFDO1FBQ3BELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsbUNBQUc7Ozs7SUFBSCxVQUFJLFlBQXFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Ozs7OztJQUVELHNDQUFNOzs7OztJQUFOLFVBQU8sS0FBYSxFQUFFLFlBQXFDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7O0lBRUQsb0NBQUk7Ozs7O0lBQUosVUFBSyxLQUFhLEVBQUUsSUFBWTs7UUFDNUIsQ0FBQSxLQUFBLElBQUksQ0FBQyxLQUFLLENBQUEsQ0FBQyxNQUFNLDZCQUFDLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxHQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsR0FBRTtJQUN2RSxDQUFDOzs7OztJQUVELHNDQUFNOzs7O0lBQU4sVUFBTyxLQUFhO1FBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsb0NBQUk7OztJQUFKO1FBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBdkNlO1FBQWYsWUFBWSxFQUFFOzt3REFBOEI7SUFDN0I7UUFBZixZQUFZLEVBQUU7O3lEQUF1QjtJQUV0QjtRQUFmLFlBQVksRUFBRTs7dURBQXlEO0lBcUM1RSw0QkFBQztDQUFBLEFBMUNELENBQTJDLHVCQUF1QixHQTBDakU7U0ExQ1kscUJBQXFCOzs7SUFFOUIsc0NBQTZDOztJQUM3Qyx1Q0FBc0M7O0lBRXRDLHFDQUF3RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbE1vZGVsLCBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbENvbmZpZyB9IGZyb20gXCIuLi9keW5hbWljLWZvcm0tY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Nb2RlbCB9IGZyb20gXCIuLi9keW5hbWljLWZvcm0ubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbExheW91dCB9IGZyb20gXCIuLi9taXNjL2R5bmFtaWMtZm9ybS1jb250cm9sLWxheW91dC5tb2RlbFwiO1xuaW1wb3J0IHsgc2VyaWFsaXphYmxlIH0gZnJvbSBcIi4uLy4uL2RlY29yYXRvci9zZXJpYWxpemFibGUuZGVjb3JhdG9yXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0dST1VQID0gXCJHUk9VUFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNGb3JtR3JvdXBNb2RlbENvbmZpZyBleHRlbmRzIER5bmFtaWNGb3JtQ29udHJvbE1vZGVsQ29uZmlnIHtcblxuICAgIGdyb3VwPzogRHluYW1pY0Zvcm1Nb2RlbDtcbiAgICBsZWdlbmQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBEeW5hbWljRm9ybUdyb3VwTW9kZWwgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCB7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgZ3JvdXA6IER5bmFtaWNGb3JtTW9kZWwgPSBbXTtcbiAgICBAc2VyaWFsaXphYmxlKCkgbGVnZW5kOiBzdHJpbmcgfCBudWxsO1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIHJlYWRvbmx5IHR5cGU6IHN0cmluZyA9IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfR1JPVVA7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IER5bmFtaWNGb3JtR3JvdXBNb2RlbENvbmZpZywgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBBcnJheS5pc0FycmF5KGNvbmZpZy5ncm91cCkgPyBjb25maWcuZ3JvdXAgOiBbXTtcbiAgICAgICAgdGhpcy5sZWdlbmQgPSBjb25maWcubGVnZW5kIHx8IG51bGw7XG4gICAgfVxuXG4gICAgZ2V0KGluZGV4OiBudW1iZXIpOiBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwW2luZGV4XTtcbiAgICB9XG5cbiAgICBzZXQoaW5kZXg6IG51bWJlciwgY29udHJvbE1vZGVsOiBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCwpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ncm91cFtpbmRleF0gPSBjb250cm9sTW9kZWw7XG4gICAgfVxuXG4gICAgYWRkKGNvbnRyb2xNb2RlbDogRHluYW1pY0Zvcm1Db250cm9sTW9kZWwpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ncm91cC5wdXNoKGNvbnRyb2xNb2RlbCk7XG4gICAgfVxuXG4gICAgaW5zZXJ0KGluZGV4OiBudW1iZXIsIGNvbnRyb2xNb2RlbDogRHluYW1pY0Zvcm1Db250cm9sTW9kZWwpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ncm91cC5zcGxpY2UoaW5kZXgsIDAsIGNvbnRyb2xNb2RlbCk7XG4gICAgfVxuXG4gICAgbW92ZShpbmRleDogbnVtYmVyLCBzdGVwOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ncm91cC5zcGxpY2UoaW5kZXggKyBzdGVwLCAwLCAuLi50aGlzLmdyb3VwLnNwbGljZShpbmRleCwgMSkpO1xuICAgIH1cblxuICAgIHJlbW92ZShpbmRleDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuZ3JvdXAuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG5cbiAgICBzaXplKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwLmxlbmd0aDtcbiAgICB9XG59XG4iXX0=