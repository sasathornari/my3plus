/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicFormControlComponent } from "./dynamic-form-control.component";
import { isString } from "../utils/core.utils";
/**
 * @abstract
 */
var /**
 * @abstract
 */
DynamicTemplateableFormControlComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicTemplateableFormControlComponent, _super);
    function DynamicTemplateableFormControlComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.layoutService
            .filterTemplatesByModel(this.model, this.templates)
            .forEach((/**
         * @param {?} template
         * @return {?}
         */
        function (template) { return _this.bindTemplate(template); }));
    };
    /**
     * @param {?} template
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.bindTemplate = /**
     * @param {?} template
     * @return {?}
     */
    function (template) {
        if (isString(template.as) && this.templateDirectives.has(template.as)) {
            /** @type {?} */
            var property = (/** @type {?} */ (this.templateDirectives.get(template.as)));
            this.viewChild[property] = this.mapTemplate(template);
        }
    };
    return DynamicTemplateableFormControlComponent;
}(DynamicFormControlComponent));
/**
 * @abstract
 */
export { DynamicTemplateableFormControlComponent };
if (false) {
    /** @type {?} */
    DynamicTemplateableFormControlComponent.prototype.templateDirectives;
    /** @type {?} */
    DynamicTemplateableFormControlComponent.prototype.templates;
    /**
     * @abstract
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.viewChild = function () { };
    /**
     * @abstract
     * @param {?} template
     * @return {?}
     */
    DynamicTemplateableFormControlComponent.prototype.mapTemplate = function (template) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZW1wbGF0ZWFibGUtZm9ybS1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L2R5bmFtaWMtdGVtcGxhdGVhYmxlLWZvcm0tY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHQSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFFL0M7Ozs7SUFBc0UsbUVBQTJCO0lBQWpHOztJQTBCQSxDQUFDOzs7O0lBcEJHLGlFQUFlOzs7SUFBZjtRQUFBLGlCQUtDO1FBSEcsSUFBSSxDQUFDLGFBQWE7YUFDYixzQkFBc0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7YUFDbEQsT0FBTzs7OztRQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsS0FBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBM0IsQ0FBMkIsRUFBQyxDQUFDO0lBQzFELENBQUM7Ozs7O0lBTUQsOERBQVk7Ozs7SUFBWixVQUFhLFFBQWtDO1FBRTNDLElBQUksUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBRTs7Z0JBRS9ELFFBQVEsR0FBRyxtQkFBQSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBVTtZQUVqRSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekQ7SUFDTCxDQUFDO0lBQ0wsOENBQUM7QUFBRCxDQUFDLEFBMUJELENBQXNFLDJCQUEyQixHQTBCaEc7Ozs7Ozs7SUF4QkcscUVBQWlEOztJQUVqRCw0REFBd0Y7Ozs7O0lBU3hGLDhFQUE4Qjs7Ozs7O0lBRTlCLHdGQUFzRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRHluYW1pY1RlbXBsYXRlYWJsZUZvcm1Db250cm9sIH0gZnJvbSBcIi4vZHluYW1pYy10ZW1wbGF0ZWFibGUtZm9ybS1jb250cm9sLmludGVyZmFjZVwiO1xuaW1wb3J0IHsgRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSBcIi4uL2RpcmVjdGl2ZS9keW5hbWljLXRlbXBsYXRlLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50IH0gZnJvbSBcIi4vZHluYW1pYy1mb3JtLWNvbnRyb2wuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gXCIuLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBEeW5hbWljVGVtcGxhdGVhYmxlRm9ybUNvbnRyb2xDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBEeW5hbWljVGVtcGxhdGVhYmxlRm9ybUNvbnRyb2wsIEFmdGVyVmlld0luaXQge1xuXG4gICAgcmVhZG9ubHkgdGVtcGxhdGVEaXJlY3RpdmVzOiBNYXA8c3RyaW5nLCBzdHJpbmc+O1xuXG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8RHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlPiB8IER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZVtdIHwgdW5kZWZpbmVkO1xuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuXG4gICAgICAgIHRoaXMubGF5b3V0U2VydmljZVxuICAgICAgICAgICAgLmZpbHRlclRlbXBsYXRlc0J5TW9kZWwodGhpcy5tb2RlbCwgdGhpcy50ZW1wbGF0ZXMpXG4gICAgICAgICAgICAuZm9yRWFjaCh0ZW1wbGF0ZSA9PiB0aGlzLmJpbmRUZW1wbGF0ZSh0ZW1wbGF0ZSkpO1xuICAgIH1cblxuICAgIGFic3RyYWN0IGdldCB2aWV3Q2hpbGQoKTogYW55O1xuXG4gICAgYWJzdHJhY3QgbWFwVGVtcGxhdGUodGVtcGxhdGU6IER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZSk6IER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZSB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBiaW5kVGVtcGxhdGUodGVtcGxhdGU6IER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZSkge1xuXG4gICAgICAgIGlmIChpc1N0cmluZyh0ZW1wbGF0ZS5hcykgJiYgdGhpcy50ZW1wbGF0ZURpcmVjdGl2ZXMuaGFzKHRlbXBsYXRlLmFzKSkge1xuXG4gICAgICAgICAgICBsZXQgcHJvcGVydHkgPSB0aGlzLnRlbXBsYXRlRGlyZWN0aXZlcy5nZXQodGVtcGxhdGUuYXMpIGFzIHN0cmluZztcblxuICAgICAgICAgICAgdGhpcy52aWV3Q2hpbGRbcHJvcGVydHldID0gdGhpcy5tYXBUZW1wbGF0ZSh0ZW1wbGF0ZSk7XG4gICAgICAgIH1cbiAgICB9XG59Il19