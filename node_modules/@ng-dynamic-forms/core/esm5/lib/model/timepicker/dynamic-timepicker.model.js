/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicDateControlModel } from "../dynamic-date-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean } from "../../utils/core.utils";
/** @type {?} */
export var DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = "TIMEPICKER";
/**
 * @record
 */
export function DynamicTimePickerModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicTimePickerModelConfig.prototype.meridian;
    /** @type {?|undefined} */
    DynamicTimePickerModelConfig.prototype.showSeconds;
}
var DynamicTimePickerModel = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicTimePickerModel, _super);
    function DynamicTimePickerModel(config, layout) {
        var _this = _super.call(this, config, layout) || this;
        _this.type = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;
        _this.meridian = isBoolean(config.meridian) ? config.meridian : false;
        _this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;
        return _this;
    }
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Boolean)
    ], DynamicTimePickerModel.prototype, "meridian", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", Boolean)
    ], DynamicTimePickerModel.prototype, "showSeconds", void 0);
    tslib_1.__decorate([
        serializable(),
        tslib_1.__metadata("design:type", String)
    ], DynamicTimePickerModel.prototype, "type", void 0);
    return DynamicTimePickerModel;
}(DynamicDateControlModel));
export { DynamicTimePickerModel };
if (false) {
    /** @type {?} */
    DynamicTimePickerModel.prototype.meridian;
    /** @type {?} */
    DynamicTimePickerModel.prototype.showSeconds;
    /** @type {?} */
    DynamicTimePickerModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10aW1lcGlja2VyLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nLWR5bmFtaWMtZm9ybXMvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC90aW1lcGlja2VyL2R5bmFtaWMtdGltZXBpY2tlci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBaUMsTUFBTSwrQkFBK0IsQ0FBQztBQUV2RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUVuRCxNQUFNLEtBQU8sb0NBQW9DLEdBQUcsWUFBWTs7OztBQUVoRSxrREFJQzs7O0lBRkcsZ0RBQW1COztJQUNuQixtREFBc0I7O0FBRzFCO0lBQTRDLGtEQUF1QjtJQU8vRCxnQ0FBWSxNQUFvQyxFQUFFLE1BQWlDO1FBQW5GLFlBRUksa0JBQU0sTUFBTSxFQUFFLE1BQU0sQ0FBQyxTQUl4QjtRQVJ3QixVQUFJLEdBQVcsb0NBQW9DLENBQUM7UUFNekUsS0FBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDckUsS0FBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7O0lBQ2xGLENBQUM7SUFYZTtRQUFmLFlBQVksRUFBRTs7NERBQW1CO0lBQ2xCO1FBQWYsWUFBWSxFQUFFOzsrREFBc0I7SUFFckI7UUFBZixZQUFZLEVBQUU7O3dEQUE4RDtJQVNqRiw2QkFBQztDQUFBLEFBZEQsQ0FBNEMsdUJBQXVCLEdBY2xFO1NBZFksc0JBQXNCOzs7SUFFL0IsMENBQWtDOztJQUNsQyw2Q0FBcUM7O0lBRXJDLHNDQUE2RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNEYXRlQ29udHJvbE1vZGVsLCBEeW5hbWljRGF0ZUNvbnRyb2xNb2RlbENvbmZpZyB9IGZyb20gXCIuLi9keW5hbWljLWRhdGUtY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4uL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcbmltcG9ydCB7IGlzQm9vbGVhbiB9IGZyb20gXCIuLi8uLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX1RJTUVQSUNLRVIgPSBcIlRJTUVQSUNLRVJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljVGltZVBpY2tlck1vZGVsQ29uZmlnIGV4dGVuZHMgRHluYW1pY0RhdGVDb250cm9sTW9kZWxDb25maWcge1xuXG4gICAgbWVyaWRpYW4/OiBib29sZWFuO1xuICAgIHNob3dTZWNvbmRzPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNsYXNzIER5bmFtaWNUaW1lUGlja2VyTW9kZWwgZXh0ZW5kcyBEeW5hbWljRGF0ZUNvbnRyb2xNb2RlbCB7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgbWVyaWRpYW46IGJvb2xlYW47XG4gICAgQHNlcmlhbGl6YWJsZSgpIHNob3dTZWNvbmRzOiBib29sZWFuO1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIHJlYWRvbmx5IHR5cGU6IHN0cmluZyA9IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfVElNRVBJQ0tFUjtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY1RpbWVQaWNrZXJNb2RlbENvbmZpZywgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMubWVyaWRpYW4gPSBpc0Jvb2xlYW4oY29uZmlnLm1lcmlkaWFuKSA/IGNvbmZpZy5tZXJpZGlhbiA6IGZhbHNlO1xuICAgICAgICB0aGlzLnNob3dTZWNvbmRzID0gaXNCb29sZWFuKGNvbmZpZy5zaG93U2Vjb25kcykgPyBjb25maWcuc2hvd1NlY29uZHMgOiBmYWxzZTtcbiAgICB9XG59Il19