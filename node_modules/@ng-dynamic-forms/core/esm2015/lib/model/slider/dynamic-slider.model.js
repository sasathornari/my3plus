/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DynamicFormValueControlModel } from "../dynamic-form-value-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean, isNumber } from "../../utils/core.utils";
/** @type {?} */
export const DYNAMIC_FORM_CONTROL_TYPE_SLIDER = "SLIDER";
/**
 * @record
 */
export function DynamicSliderModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicSliderModelConfig.prototype.max;
    /** @type {?|undefined} */
    DynamicSliderModelConfig.prototype.min;
    /** @type {?|undefined} */
    DynamicSliderModelConfig.prototype.step;
    /** @type {?|undefined} */
    DynamicSliderModelConfig.prototype.vertical;
}
export class DynamicSliderModel extends DynamicFormValueControlModel {
    /**
     * @param {?} config
     * @param {?=} layout
     */
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;
        this.max = isNumber(config.max) ? config.max : 10;
        this.min = isNumber(config.min) ? config.min : 0;
        this.step = isNumber(config.step) ? config.step : 1;
        this.vertical = isBoolean(config.vertical) ? config.vertical : false;
    }
}
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicSliderModel.prototype, "max", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicSliderModel.prototype, "min", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicSliderModel.prototype, "step", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Boolean)
], DynamicSliderModel.prototype, "vertical", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicSliderModel.prototype, "type", void 0);
if (false) {
    /** @type {?} */
    DynamicSliderModel.prototype.max;
    /** @type {?} */
    DynamicSliderModel.prototype.min;
    /** @type {?} */
    DynamicSliderModel.prototype.step;
    /** @type {?} */
    DynamicSliderModel.prototype.vertical;
    /** @type {?} */
    DynamicSliderModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1zbGlkZXIubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL21vZGVsL3NsaWRlci9keW5hbWljLXNsaWRlci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBc0MsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV2SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFFN0QsTUFBTSxPQUFPLGdDQUFnQyxHQUFHLFFBQVE7Ozs7QUFFeEQsOENBTUM7OztJQUpHLHVDQUFhOztJQUNiLHVDQUFhOztJQUNiLHdDQUFjOztJQUNkLDRDQUFtQjs7QUFHdkIsTUFBTSxPQUFPLGtCQUFtQixTQUFRLDRCQUFvQzs7Ozs7SUFTeEUsWUFBWSxNQUFnQyxFQUFFLE1BQWlDO1FBRTNFLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFKRCxTQUFJLEdBQVcsZ0NBQWdDLENBQUM7UUFNckUsSUFBSSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDbEQsSUFBSSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDekUsQ0FBQztDQUNKO0FBaEJtQjtJQUFmLFlBQVksRUFBRTs7K0NBQW9CO0FBQ25CO0lBQWYsWUFBWSxFQUFFOzsrQ0FBb0I7QUFDbkI7SUFBZixZQUFZLEVBQUU7O2dEQUFxQjtBQUNwQjtJQUFmLFlBQVksRUFBRTs7b0RBQW1CO0FBRWxCO0lBQWYsWUFBWSxFQUFFOztnREFBMEQ7OztJQUx6RSxpQ0FBbUM7O0lBQ25DLGlDQUFtQzs7SUFDbkMsa0NBQW9DOztJQUNwQyxzQ0FBa0M7O0lBRWxDLGtDQUF5RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWxDb25maWcsIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWwgfSBmcm9tIFwiLi4vZHluYW1pYy1mb3JtLXZhbHVlLWNvbnRyb2wubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbExheW91dCB9IGZyb20gXCIuLi9taXNjL2R5bmFtaWMtZm9ybS1jb250cm9sLWxheW91dC5tb2RlbFwiO1xuaW1wb3J0IHsgc2VyaWFsaXphYmxlIH0gZnJvbSBcIi4uLy4uL2RlY29yYXRvci9zZXJpYWxpemFibGUuZGVjb3JhdG9yXCI7XG5pbXBvcnQgeyBpc0Jvb2xlYW4sIGlzTnVtYmVyIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NvcmUudXRpbHNcIjtcblxuZXhwb3J0IGNvbnN0IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfU0xJREVSID0gXCJTTElERVJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljU2xpZGVyTW9kZWxDb25maWcgZXh0ZW5kcyBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsQ29uZmlnPG51bWJlcj4ge1xuXG4gICAgbWF4PzogbnVtYmVyO1xuICAgIG1pbj86IG51bWJlcjtcbiAgICBzdGVwPzogbnVtYmVyO1xuICAgIHZlcnRpY2FsPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNsYXNzIER5bmFtaWNTbGlkZXJNb2RlbCBleHRlbmRzIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWw8bnVtYmVyPiB7XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgbWF4OiBudW1iZXIgfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSBtaW46IG51bWJlciB8IG51bGw7XG4gICAgQHNlcmlhbGl6YWJsZSgpIHN0ZXA6IG51bWJlciB8IG51bGw7XG4gICAgQHNlcmlhbGl6YWJsZSgpIHZlcnRpY2FsOiBib29sZWFuO1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIHJlYWRvbmx5IHR5cGU6IHN0cmluZyA9IERZTkFNSUNfRk9STV9DT05UUk9MX1RZUEVfU0xJREVSO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBEeW5hbWljU2xpZGVyTW9kZWxDb25maWcsIGxheW91dD86IER5bmFtaWNGb3JtQ29udHJvbExheW91dCkge1xuXG4gICAgICAgIHN1cGVyKGNvbmZpZywgbGF5b3V0KTtcblxuICAgICAgICB0aGlzLm1heCA9IGlzTnVtYmVyKGNvbmZpZy5tYXgpID8gY29uZmlnLm1heCA6IDEwO1xuICAgICAgICB0aGlzLm1pbiA9IGlzTnVtYmVyKGNvbmZpZy5taW4pID8gY29uZmlnLm1pbiA6IDA7XG4gICAgICAgIHRoaXMuc3RlcCA9IGlzTnVtYmVyKGNvbmZpZy5zdGVwKSA/IGNvbmZpZy5zdGVwIDogMTtcbiAgICAgICAgdGhpcy52ZXJ0aWNhbCA9IGlzQm9vbGVhbihjb25maWcudmVydGljYWwpID8gY29uZmlnLnZlcnRpY2FsIDogZmFsc2U7XG4gICAgfVxufSJdfQ==