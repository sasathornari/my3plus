/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BehaviorSubject } from "rxjs";
import { serializable, serialize } from "../decorator/serializable.decorator";
import { isBoolean, isObject, isString } from "../utils/core.utils";
/**
 * @record
 */
export function DynamicFormControlModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.asyncValidators;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.disabled;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.errorMessages;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.hidden;
    /** @type {?} */
    DynamicFormControlModelConfig.prototype.id;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.label;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.labelTooltip;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.controlTooltip;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.name;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.relations;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.updateOn;
    /** @type {?|undefined} */
    DynamicFormControlModelConfig.prototype.validators;
}
/**
 * @abstract
 */
export class DynamicFormControlModel {
    /**
     * @protected
     * @param {?} config
     * @param {?=} layout
     */
    constructor(config, layout = null) {
        this.parent = null;
        this.asyncValidators = config.asyncValidators || null;
        this.errorMessages = config.errorMessages || null;
        this.hidden = isBoolean(config.hidden) ? config.hidden : false;
        this.id = config.id;
        this.label = config.label || null;
        this.labelTooltip = config.labelTooltip || null;
        this.controlTooltip = config.controlTooltip || null;
        this.layout = layout;
        this.name = config.name || config.id;
        this.relations = Array.isArray(config.relations) ? config.relations : [];
        this.updateOn = isString(config.updateOn) ? config.updateOn : null;
        this.validators = config.validators || null;
        this.disabled$ = new BehaviorSubject(isBoolean(config.disabled) ? config.disabled : false);
        this.disabled$.subscribe((/**
         * @param {?} disabled
         * @return {?}
         */
        disabled => this._disabled = disabled));
        this.disabledChanges = this.disabled$.asObservable();
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this.disabled$.getValue();
    }
    /**
     * @param {?} disabled
     * @return {?}
     */
    set disabled(disabled) {
        this.disabled$.next(disabled);
    }
    /**
     * @return {?}
     */
    get hasErrorMessages() {
        return isObject(this.errorMessages);
    }
    /**
     * @return {?}
     */
    toJSON() {
        return serialize(this);
    }
}
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Object)
], DynamicFormControlModel.prototype, "asyncValidators", void 0);
tslib_1.__decorate([
    serializable("disabled"),
    tslib_1.__metadata("design:type", Boolean)
], DynamicFormControlModel.prototype, "_disabled", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Object)
], DynamicFormControlModel.prototype, "errorMessages", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Boolean)
], DynamicFormControlModel.prototype, "hidden", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "id", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "label", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "labelTooltip", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "controlTooltip", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Object)
], DynamicFormControlModel.prototype, "layout", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "name", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Array)
], DynamicFormControlModel.prototype, "relations", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormControlModel.prototype, "updateOn", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Object)
], DynamicFormControlModel.prototype, "validators", void 0);
if (false) {
    /** @type {?} */
    DynamicFormControlModel.prototype.asyncValidators;
    /** @type {?} */
    DynamicFormControlModel.prototype._disabled;
    /** @type {?} */
    DynamicFormControlModel.prototype.errorMessages;
    /** @type {?} */
    DynamicFormControlModel.prototype.hidden;
    /** @type {?} */
    DynamicFormControlModel.prototype.id;
    /** @type {?} */
    DynamicFormControlModel.prototype.label;
    /** @type {?} */
    DynamicFormControlModel.prototype.labelTooltip;
    /** @type {?} */
    DynamicFormControlModel.prototype.controlTooltip;
    /** @type {?} */
    DynamicFormControlModel.prototype.layout;
    /** @type {?} */
    DynamicFormControlModel.prototype.name;
    /** @type {?} */
    DynamicFormControlModel.prototype.parent;
    /** @type {?} */
    DynamicFormControlModel.prototype.relations;
    /** @type {?} */
    DynamicFormControlModel.prototype.updateOn;
    /** @type {?} */
    DynamicFormControlModel.prototype.validators;
    /**
     * @type {?}
     * @private
     */
    DynamicFormControlModel.prototype.disabled$;
    /** @type {?} */
    DynamicFormControlModel.prototype.disabledChanges;
    /** @type {?} */
    DynamicFormControlModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,